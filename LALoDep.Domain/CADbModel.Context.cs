//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LALoDep.Domain
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LALoDepEntities : DbContext
    {
       
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<NG_pd_SecurityGetBySecurityItemIDsUserID_sp_Result> NG_pd_SecurityGetBySecurityItemIDsUserID_sp(string securityItemID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var securityItemIDParameter = securityItemID != null ?
                new ObjectParameter("SecurityItemID", securityItemID) :
                new ObjectParameter("SecurityItemID", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NG_pd_SecurityGetBySecurityItemIDsUserID_sp_Result>("NG_pd_SecurityGetBySecurityItemIDsUserID_sp", securityItemIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_UserLoginCheckGetByJCATSUserID_sp_Result> pd_UserLoginCheckGetByJCATSUserID_sp(Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_UserLoginCheckGetByJCATSUserID_sp_Result>("pd_UserLoginCheckGetByJCATSUserID_sp", userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SurveyInsert_sp(ObjectParameter surveyID, Nullable<int> surveyByPersonID, Nullable<int> surveyForPersonID, Nullable<int> surveyForOrganizationID, Nullable<int> surveyTypeID, Nullable<System.DateTime> surveyDate, string surveyComment, Nullable<int> recordStateID, ObjectParameter recordTimeStamp, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var surveyByPersonIDParameter = surveyByPersonID.HasValue ?
                new ObjectParameter("SurveyByPersonID", surveyByPersonID) :
                new ObjectParameter("SurveyByPersonID", typeof(int));
    
            var surveyForPersonIDParameter = surveyForPersonID.HasValue ?
                new ObjectParameter("SurveyForPersonID", surveyForPersonID) :
                new ObjectParameter("SurveyForPersonID", typeof(int));
    
            var surveyForOrganizationIDParameter = surveyForOrganizationID.HasValue ?
                new ObjectParameter("SurveyForOrganizationID", surveyForOrganizationID) :
                new ObjectParameter("SurveyForOrganizationID", typeof(int));
    
            var surveyTypeIDParameter = surveyTypeID.HasValue ?
                new ObjectParameter("SurveyTypeID", surveyTypeID) :
                new ObjectParameter("SurveyTypeID", typeof(int));
    
            var surveyDateParameter = surveyDate.HasValue ?
                new ObjectParameter("SurveyDate", surveyDate) :
                new ObjectParameter("SurveyDate", typeof(System.DateTime));
    
            var surveyCommentParameter = surveyComment != null ?
                new ObjectParameter("SurveyComment", surveyComment) :
                new ObjectParameter("SurveyComment", typeof(string));
    
            var recordStateIDParameter = recordStateID.HasValue ?
                new ObjectParameter("RecordStateID", recordStateID) :
                new ObjectParameter("RecordStateID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SurveyInsert_sp", surveyID, surveyByPersonIDParameter, surveyForPersonIDParameter, surveyForOrganizationIDParameter, surveyTypeIDParameter, surveyDateParameter, surveyCommentParameter, recordStateIDParameter, recordTimeStamp, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<string> pd_LoginCheckSuccess_sp(string loginKey, Nullable<int> recordStateID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID, Nullable<int> adminFlag, string clientAddress, string clientHost, string aSPPageName, string serverInfo, Nullable<byte> logoutFlag, Nullable<byte> returnRecordFlag)
        {
            var loginKeyParameter = loginKey != null ?
                new ObjectParameter("LoginKey", loginKey) :
                new ObjectParameter("LoginKey", typeof(string));
    
            var recordStateIDParameter = recordStateID.HasValue ?
                new ObjectParameter("RecordStateID", recordStateID) :
                new ObjectParameter("RecordStateID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            var adminFlagParameter = adminFlag.HasValue ?
                new ObjectParameter("AdminFlag", adminFlag) :
                new ObjectParameter("AdminFlag", typeof(int));
    
            var clientAddressParameter = clientAddress != null ?
                new ObjectParameter("ClientAddress", clientAddress) :
                new ObjectParameter("ClientAddress", typeof(string));
    
            var clientHostParameter = clientHost != null ?
                new ObjectParameter("ClientHost", clientHost) :
                new ObjectParameter("ClientHost", typeof(string));
    
            var aSPPageNameParameter = aSPPageName != null ?
                new ObjectParameter("ASPPageName", aSPPageName) :
                new ObjectParameter("ASPPageName", typeof(string));
    
            var serverInfoParameter = serverInfo != null ?
                new ObjectParameter("ServerInfo", serverInfo) :
                new ObjectParameter("ServerInfo", typeof(string));
    
            var logoutFlagParameter = logoutFlag.HasValue ?
                new ObjectParameter("LogoutFlag", logoutFlag) :
                new ObjectParameter("LogoutFlag", typeof(byte));
    
            var returnRecordFlagParameter = returnRecordFlag.HasValue ?
                new ObjectParameter("ReturnRecordFlag", returnRecordFlag) :
                new ObjectParameter("ReturnRecordFlag", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pd_LoginCheckSuccess_sp", loginKeyParameter, recordStateIDParameter, userIDParameter, batchLogJobIDParameter, adminFlagParameter, clientAddressParameter, clientHostParameter, aSPPageNameParameter, serverInfoParameter, logoutFlagParameter, returnRecordFlagParameter);
        }
    
        public virtual ObjectResult<NG_com_NavigationGetByCaseIDTaskID_sp_Result> NG_com_NavigationGetByCaseIDTaskID_sp(Nullable<int> caseID, Nullable<int> navigationTaskID, Nullable<int> navigationID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(int));
    
            var navigationTaskIDParameter = navigationTaskID.HasValue ?
                new ObjectParameter("NavigationTaskID", navigationTaskID) :
                new ObjectParameter("NavigationTaskID", typeof(int));
    
            var navigationIDParameter = navigationID.HasValue ?
                new ObjectParameter("NavigationID", navigationID) :
                new ObjectParameter("NavigationID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NG_com_NavigationGetByCaseIDTaskID_sp_Result>("NG_com_NavigationGetByCaseIDTaskID_sp", caseIDParameter, navigationTaskIDParameter, navigationIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_CaseSearch_sp_Result> pd_CaseSearch_sp(string firstName, string lastName, string docketNumber, string caseNumber, Nullable<short> appointment, string hHSA, ObjectParameter gUID, Nullable<int> startRecord, Nullable<int> range, Nullable<int> sortID, ObjectParameter totalRecords, Nullable<int> userID, Nullable<System.Guid> batchLogJobID, Nullable<int> agencyID)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var docketNumberParameter = docketNumber != null ?
                new ObjectParameter("DocketNumber", docketNumber) :
                new ObjectParameter("DocketNumber", typeof(string));
    
            var caseNumberParameter = caseNumber != null ?
                new ObjectParameter("CaseNumber", caseNumber) :
                new ObjectParameter("CaseNumber", typeof(string));
    
            var appointmentParameter = appointment.HasValue ?
                new ObjectParameter("Appointment", appointment) :
                new ObjectParameter("Appointment", typeof(short));
    
            var hHSAParameter = hHSA != null ?
                new ObjectParameter("HHSA", hHSA) :
                new ObjectParameter("HHSA", typeof(string));
    
            var startRecordParameter = startRecord.HasValue ?
                new ObjectParameter("StartRecord", startRecord) :
                new ObjectParameter("StartRecord", typeof(int));
    
            var rangeParameter = range.HasValue ?
                new ObjectParameter("Range", range) :
                new ObjectParameter("Range", typeof(int));
    
            var sortIDParameter = sortID.HasValue ?
                new ObjectParameter("SortID", sortID) :
                new ObjectParameter("SortID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            var agencyIDParameter = agencyID.HasValue ?
                new ObjectParameter("AgencyID", agencyID) :
                new ObjectParameter("AgencyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_CaseSearch_sp_Result>("pd_CaseSearch_sp", firstNameParameter, lastNameParameter, docketNumberParameter, caseNumberParameter, appointmentParameter, hHSAParameter, gUID, startRecordParameter, rangeParameter, sortIDParameter, totalRecords, userIDParameter, batchLogJobIDParameter, agencyIDParameter);
        }
    
        public virtual ObjectResult<pd_CodeGetByTypeIDAndUserIDSortShortValue_sp_Result> pd_CodeGetByTypeIDAndUserIDSortShortValue_sp(Nullable<int> codeTypeID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var codeTypeIDParameter = codeTypeID.HasValue ?
                new ObjectParameter("CodeTypeID", codeTypeID) :
                new ObjectParameter("CodeTypeID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_CodeGetByTypeIDAndUserIDSortShortValue_sp_Result>("pd_CodeGetByTypeIDAndUserIDSortShortValue_sp", codeTypeIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_RoleAgencyAttorneyGet_sp_Result> pd_RoleAgencyAttorneyGet_sp(Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_RoleAgencyAttorneyGet_sp_Result>("pd_RoleAgencyAttorneyGet_sp", userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_RoleAgencyInvestigatorGet_sp_Result> pd_RoleAgencyInvestigatorGet_sp(Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_RoleAgencyInvestigatorGet_sp_Result>("pd_RoleAgencyInvestigatorGet_sp", userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_RoleAgencyLegalAssistantGet_sp_Result> pd_RoleAgencyLegalAssistantGet_sp(Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_RoleAgencyLegalAssistantGet_sp_Result>("pd_RoleAgencyLegalAssistantGet_sp", userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_RoleAgencyHearingOfficerGet_sp_Result> pd_RoleAgencyHearingOfficerGet_sp(Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_RoleAgencyHearingOfficerGet_sp_Result>("pd_RoleAgencyHearingOfficerGet_sp", userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<string> NG_pd_LoginCheckSuccess_sp(string loginKey, Nullable<int> recordStateID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID, Nullable<int> adminFlag, string clientAddress, string clientHost, string aSPPageName, string serverInfo, Nullable<byte> logoutFlag, Nullable<byte> returnRecordFlag)
        {
            var loginKeyParameter = loginKey != null ?
                new ObjectParameter("LoginKey", loginKey) :
                new ObjectParameter("LoginKey", typeof(string));
    
            var recordStateIDParameter = recordStateID.HasValue ?
                new ObjectParameter("RecordStateID", recordStateID) :
                new ObjectParameter("RecordStateID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            var adminFlagParameter = adminFlag.HasValue ?
                new ObjectParameter("AdminFlag", adminFlag) :
                new ObjectParameter("AdminFlag", typeof(int));
    
            var clientAddressParameter = clientAddress != null ?
                new ObjectParameter("ClientAddress", clientAddress) :
                new ObjectParameter("ClientAddress", typeof(string));
    
            var clientHostParameter = clientHost != null ?
                new ObjectParameter("ClientHost", clientHost) :
                new ObjectParameter("ClientHost", typeof(string));
    
            var aSPPageNameParameter = aSPPageName != null ?
                new ObjectParameter("ASPPageName", aSPPageName) :
                new ObjectParameter("ASPPageName", typeof(string));
    
            var serverInfoParameter = serverInfo != null ?
                new ObjectParameter("ServerInfo", serverInfo) :
                new ObjectParameter("ServerInfo", typeof(string));
    
            var logoutFlagParameter = logoutFlag.HasValue ?
                new ObjectParameter("LogoutFlag", logoutFlag) :
                new ObjectParameter("LogoutFlag", typeof(byte));
    
            var returnRecordFlagParameter = returnRecordFlag.HasValue ?
                new ObjectParameter("ReturnRecordFlag", returnRecordFlag) :
                new ObjectParameter("ReturnRecordFlag", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("NG_pd_LoginCheckSuccess_sp", loginKeyParameter, recordStateIDParameter, userIDParameter, batchLogJobIDParameter, adminFlagParameter, clientAddressParameter, clientHostParameter, aSPPageNameParameter, serverInfoParameter, logoutFlagParameter, returnRecordFlagParameter);
        }
    
        public virtual ObjectResult<NG_pd_UserLoginCheckGetByJcatsUserID_sp_Result> NG_pd_UserLoginCheckGetByJcatsUserID_sp(Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NG_pd_UserLoginCheckGetByJcatsUserID_sp_Result>("NG_pd_UserLoginCheckGetByJcatsUserID_sp", userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_JcatsGroupAgencyGetByJcatsGroupID_sp_Result> pd_JcatsGroupAgencyGetByJcatsGroupID_sp(Nullable<int> jcatsGroupID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var jcatsGroupIDParameter = jcatsGroupID.HasValue ?
                new ObjectParameter("JcatsGroupID", jcatsGroupID) :
                new ObjectParameter("JcatsGroupID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_JcatsGroupAgencyGetByJcatsGroupID_sp_Result>("pd_JcatsGroupAgencyGetByJcatsGroupID_sp", jcatsGroupIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_CodeGetAllBySystemValueTypeID_sp_Result> pd_CodeGetAllBySystemValueTypeID_sp(Nullable<int> systemValueTypeID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var systemValueTypeIDParameter = systemValueTypeID.HasValue ?
                new ObjectParameter("SystemValueTypeID", systemValueTypeID) :
                new ObjectParameter("SystemValueTypeID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_CodeGetAllBySystemValueTypeID_sp_Result>("pd_CodeGetAllBySystemValueTypeID_sp", systemValueTypeIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_PersonGet_sp_Result> pd_PersonGet_sp(Nullable<int> personID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_PersonGet_sp_Result>("pd_PersonGet_sp", personIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_PDActionSearchGet_sp_Result> pd_PDActionSearchGet_sp(Nullable<int> actionStatusCodeID, Nullable<int> actionTypeCodeID, Nullable<System.DateTime> reminderStartDate, Nullable<System.DateTime> reminderEndDate, Nullable<System.DateTime> dueStartDate, Nullable<System.DateTime> dueEndDate, Nullable<int> caseID, Nullable<int> assignedToPersonID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var actionStatusCodeIDParameter = actionStatusCodeID.HasValue ?
                new ObjectParameter("ActionStatusCodeID", actionStatusCodeID) :
                new ObjectParameter("ActionStatusCodeID", typeof(int));
    
            var actionTypeCodeIDParameter = actionTypeCodeID.HasValue ?
                new ObjectParameter("ActionTypeCodeID", actionTypeCodeID) :
                new ObjectParameter("ActionTypeCodeID", typeof(int));
    
            var reminderStartDateParameter = reminderStartDate.HasValue ?
                new ObjectParameter("ReminderStartDate", reminderStartDate) :
                new ObjectParameter("ReminderStartDate", typeof(System.DateTime));
    
            var reminderEndDateParameter = reminderEndDate.HasValue ?
                new ObjectParameter("ReminderEndDate", reminderEndDate) :
                new ObjectParameter("ReminderEndDate", typeof(System.DateTime));
    
            var dueStartDateParameter = dueStartDate.HasValue ?
                new ObjectParameter("DueStartDate", dueStartDate) :
                new ObjectParameter("DueStartDate", typeof(System.DateTime));
    
            var dueEndDateParameter = dueEndDate.HasValue ?
                new ObjectParameter("DueEndDate", dueEndDate) :
                new ObjectParameter("DueEndDate", typeof(System.DateTime));
    
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(int));
    
            var assignedToPersonIDParameter = assignedToPersonID.HasValue ?
                new ObjectParameter("AssignedToPersonID", assignedToPersonID) :
                new ObjectParameter("AssignedToPersonID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_PDActionSearchGet_sp_Result>("pd_PDActionSearchGet_sp", actionStatusCodeIDParameter, actionTypeCodeIDParameter, reminderStartDateParameter, reminderEndDateParameter, dueStartDateParameter, dueEndDateParameter, caseIDParameter, assignedToPersonIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual int pd_PDActionUpdateStatusOnly_sp(string pDActionIDList, Nullable<int> actionStatusCodeID, Nullable<System.DateTime> actionStatusDate, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var pDActionIDListParameter = pDActionIDList != null ?
                new ObjectParameter("PDActionIDList", pDActionIDList) :
                new ObjectParameter("PDActionIDList", typeof(string));
    
            var actionStatusCodeIDParameter = actionStatusCodeID.HasValue ?
                new ObjectParameter("ActionStatusCodeID", actionStatusCodeID) :
                new ObjectParameter("ActionStatusCodeID", typeof(int));
    
            var actionStatusDateParameter = actionStatusDate.HasValue ?
                new ObjectParameter("ActionStatusDate", actionStatusDate) :
                new ObjectParameter("ActionStatusDate", typeof(System.DateTime));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_PDActionUpdateStatusOnly_sp", pDActionIDListParameter, actionStatusCodeIDParameter, actionStatusDateParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual int pd_PDActionDelete_sp(Nullable<int> iD, Nullable<decimal> recordTimeStamp, Nullable<int> userID, Nullable<System.Guid> batchLogJobID, string loadOption, Nullable<int> recordStateID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var recordTimeStampParameter = recordTimeStamp.HasValue ?
                new ObjectParameter("RecordTimeStamp", recordTimeStamp) :
                new ObjectParameter("RecordTimeStamp", typeof(decimal));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            var loadOptionParameter = loadOption != null ?
                new ObjectParameter("LoadOption", loadOption) :
                new ObjectParameter("LoadOption", typeof(string));
    
            var recordStateIDParameter = recordStateID.HasValue ?
                new ObjectParameter("RecordStateID", recordStateID) :
                new ObjectParameter("RecordStateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_PDActionDelete_sp", iDParameter, recordTimeStampParameter, userIDParameter, batchLogJobIDParameter, loadOptionParameter, recordStateIDParameter);
        }
    
        public virtual ObjectResult<pd_CaseGet_sp_Result> pd_CaseGet_sp(Nullable<int> caseID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_CaseGet_sp_Result>("pd_CaseGet_sp", caseIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<CaseFileGetByCaseID_sp_Result> CaseFileGetByCaseID_sp(Nullable<int> caseID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID, string sortOption)
        {
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            var sortOptionParameter = sortOption != null ?
                new ObjectParameter("SortOption", sortOption) :
                new ObjectParameter("SortOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CaseFileGetByCaseID_sp_Result>("CaseFileGetByCaseID_sp", caseIDParameter, userIDParameter, batchLogJobIDParameter, sortOptionParameter);
        }
    
        public virtual ObjectResult<pd_RoleGetByCaseID_sp_Result> pd_RoleGetByCaseID_sp(Nullable<int> caseID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_RoleGetByCaseID_sp_Result>("pd_RoleGetByCaseID_sp", caseIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_CaseGetOtherByPersonIDCaseID_sp_Result> pd_CaseGetOtherByPersonIDCaseID_sp(Nullable<int> personID, Nullable<int> caseID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_CaseGetOtherByPersonIDCaseID_sp_Result>("pd_CaseGetOtherByPersonIDCaseID_sp", personIDParameter, caseIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_PDActionGet_sp_Result> pd_PDActionGet_sp(Nullable<int> pDActionID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var pDActionIDParameter = pDActionID.HasValue ?
                new ObjectParameter("PDActionID", pDActionID) :
                new ObjectParameter("PDActionID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_PDActionGet_sp_Result>("pd_PDActionGet_sp", pDActionIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_PDActionInsert_sp_Result> pd_PDActionInsert_sp(ObjectParameter pDActionID, Nullable<int> agencyID, Nullable<int> branchID, Nullable<int> caseID, Nullable<int> assignedToPersonID, Nullable<int> actionTypeCodeID, string actionNote, Nullable<int> actionStatusCodeID, Nullable<System.DateTime> actionStatusDate, Nullable<System.DateTime> actionDueDate, Nullable<System.DateTime> actionReminderDate, Nullable<int> actionAssociatedToEntityID, Nullable<int> actionAssociatedToEntityTypeCodeID, Nullable<int> recordStateID, ObjectParameter recordTimeStamp, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var agencyIDParameter = agencyID.HasValue ?
                new ObjectParameter("AgencyID", agencyID) :
                new ObjectParameter("AgencyID", typeof(int));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(int));
    
            var assignedToPersonIDParameter = assignedToPersonID.HasValue ?
                new ObjectParameter("AssignedToPersonID", assignedToPersonID) :
                new ObjectParameter("AssignedToPersonID", typeof(int));
    
            var actionTypeCodeIDParameter = actionTypeCodeID.HasValue ?
                new ObjectParameter("ActionTypeCodeID", actionTypeCodeID) :
                new ObjectParameter("ActionTypeCodeID", typeof(int));
    
            var actionNoteParameter = actionNote != null ?
                new ObjectParameter("ActionNote", actionNote) :
                new ObjectParameter("ActionNote", typeof(string));
    
            var actionStatusCodeIDParameter = actionStatusCodeID.HasValue ?
                new ObjectParameter("ActionStatusCodeID", actionStatusCodeID) :
                new ObjectParameter("ActionStatusCodeID", typeof(int));
    
            var actionStatusDateParameter = actionStatusDate.HasValue ?
                new ObjectParameter("ActionStatusDate", actionStatusDate) :
                new ObjectParameter("ActionStatusDate", typeof(System.DateTime));
    
            var actionDueDateParameter = actionDueDate.HasValue ?
                new ObjectParameter("ActionDueDate", actionDueDate) :
                new ObjectParameter("ActionDueDate", typeof(System.DateTime));
    
            var actionReminderDateParameter = actionReminderDate.HasValue ?
                new ObjectParameter("ActionReminderDate", actionReminderDate) :
                new ObjectParameter("ActionReminderDate", typeof(System.DateTime));
    
            var actionAssociatedToEntityIDParameter = actionAssociatedToEntityID.HasValue ?
                new ObjectParameter("ActionAssociatedToEntityID", actionAssociatedToEntityID) :
                new ObjectParameter("ActionAssociatedToEntityID", typeof(int));
    
            var actionAssociatedToEntityTypeCodeIDParameter = actionAssociatedToEntityTypeCodeID.HasValue ?
                new ObjectParameter("ActionAssociatedToEntityTypeCodeID", actionAssociatedToEntityTypeCodeID) :
                new ObjectParameter("ActionAssociatedToEntityTypeCodeID", typeof(int));
    
            var recordStateIDParameter = recordStateID.HasValue ?
                new ObjectParameter("RecordStateID", recordStateID) :
                new ObjectParameter("RecordStateID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_PDActionInsert_sp_Result>("pd_PDActionInsert_sp", pDActionID, agencyIDParameter, branchIDParameter, caseIDParameter, assignedToPersonIDParameter, actionTypeCodeIDParameter, actionNoteParameter, actionStatusCodeIDParameter, actionStatusDateParameter, actionDueDateParameter, actionReminderDateParameter, actionAssociatedToEntityIDParameter, actionAssociatedToEntityTypeCodeIDParameter, recordStateIDParameter, recordTimeStamp, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual int pd_PDActionUpdate_sp(Nullable<int> pDActionID, Nullable<int> agencyID, Nullable<int> branchID, Nullable<int> caseID, Nullable<int> assignedToPersonID, Nullable<int> actionTypeCodeID, string actionNote, Nullable<int> actionStatusCodeID, Nullable<System.DateTime> actionStatusDate, Nullable<System.DateTime> actionDueDate, Nullable<System.DateTime> actionReminderDate, Nullable<int> actionAssociatedToEntityID, Nullable<int> actionAssociatedToEntityTypeCodeID, Nullable<int> recordStateID, ObjectParameter recordTimeStamp, Nullable<int> userID, Nullable<System.Guid> batchLogJobID, Nullable<int> personID)
        {
            var pDActionIDParameter = pDActionID.HasValue ?
                new ObjectParameter("PDActionID", pDActionID) :
                new ObjectParameter("PDActionID", typeof(int));
    
            var agencyIDParameter = agencyID.HasValue ?
                new ObjectParameter("AgencyID", agencyID) :
                new ObjectParameter("AgencyID", typeof(int));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(int));
    
            var assignedToPersonIDParameter = assignedToPersonID.HasValue ?
                new ObjectParameter("AssignedToPersonID", assignedToPersonID) :
                new ObjectParameter("AssignedToPersonID", typeof(int));
    
            var actionTypeCodeIDParameter = actionTypeCodeID.HasValue ?
                new ObjectParameter("ActionTypeCodeID", actionTypeCodeID) :
                new ObjectParameter("ActionTypeCodeID", typeof(int));
    
            var actionNoteParameter = actionNote != null ?
                new ObjectParameter("ActionNote", actionNote) :
                new ObjectParameter("ActionNote", typeof(string));
    
            var actionStatusCodeIDParameter = actionStatusCodeID.HasValue ?
                new ObjectParameter("ActionStatusCodeID", actionStatusCodeID) :
                new ObjectParameter("ActionStatusCodeID", typeof(int));
    
            var actionStatusDateParameter = actionStatusDate.HasValue ?
                new ObjectParameter("ActionStatusDate", actionStatusDate) :
                new ObjectParameter("ActionStatusDate", typeof(System.DateTime));
    
            var actionDueDateParameter = actionDueDate.HasValue ?
                new ObjectParameter("ActionDueDate", actionDueDate) :
                new ObjectParameter("ActionDueDate", typeof(System.DateTime));
    
            var actionReminderDateParameter = actionReminderDate.HasValue ?
                new ObjectParameter("ActionReminderDate", actionReminderDate) :
                new ObjectParameter("ActionReminderDate", typeof(System.DateTime));
    
            var actionAssociatedToEntityIDParameter = actionAssociatedToEntityID.HasValue ?
                new ObjectParameter("ActionAssociatedToEntityID", actionAssociatedToEntityID) :
                new ObjectParameter("ActionAssociatedToEntityID", typeof(int));
    
            var actionAssociatedToEntityTypeCodeIDParameter = actionAssociatedToEntityTypeCodeID.HasValue ?
                new ObjectParameter("ActionAssociatedToEntityTypeCodeID", actionAssociatedToEntityTypeCodeID) :
                new ObjectParameter("ActionAssociatedToEntityTypeCodeID", typeof(int));
    
            var recordStateIDParameter = recordStateID.HasValue ?
                new ObjectParameter("RecordStateID", recordStateID) :
                new ObjectParameter("RecordStateID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_PDActionUpdate_sp", pDActionIDParameter, agencyIDParameter, branchIDParameter, caseIDParameter, assignedToPersonIDParameter, actionTypeCodeIDParameter, actionNoteParameter, actionStatusCodeIDParameter, actionStatusDateParameter, actionDueDateParameter, actionReminderDateParameter, actionAssociatedToEntityIDParameter, actionAssociatedToEntityTypeCodeIDParameter, recordStateIDParameter, recordTimeStamp, userIDParameter, batchLogJobIDParameter, personIDParameter);
        }
    
        public virtual ObjectResult<rpt_AttorneyHourlyInvoice_sp_Result> rpt_AttorneyHourlyInvoice_sp(Nullable<int> reportID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var reportIDParameter = reportID.HasValue ?
                new ObjectParameter("ReportID", reportID) :
                new ObjectParameter("ReportID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_AttorneyHourlyInvoice_sp_Result>("rpt_AttorneyHourlyInvoice_sp", reportIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<rpt_AttorneyHourlyInvoice_Sub_Services_sp_Result> rpt_AttorneyHourlyInvoice_Sub_Services_sp(Nullable<int> reportID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var reportIDParameter = reportID.HasValue ?
                new ObjectParameter("ReportID", reportID) :
                new ObjectParameter("ReportID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_AttorneyHourlyInvoice_Sub_Services_sp_Result>("rpt_AttorneyHourlyInvoice_Sub_Services_sp", reportIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<rpt_AttorneyHourlyInvoice_Sub_Details_sp_Result> rpt_AttorneyHourlyInvoice_Sub_Details_sp(Nullable<int> reportID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var reportIDParameter = reportID.HasValue ?
                new ObjectParameter("ReportID", reportID) :
                new ObjectParameter("ReportID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<rpt_AttorneyHourlyInvoice_Sub_Details_sp_Result>("rpt_AttorneyHourlyInvoice_Sub_Details_sp", reportIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_AgencyGetHomeByPersonID_sp_Result> pd_AgencyGetHomeByPersonID_sp(Nullable<int> personID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_AgencyGetHomeByPersonID_sp_Result>("pd_AgencyGetHomeByPersonID_sp", personIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_SecurityGetByJcatsGroupID_sp_Result> pd_SecurityGetByJcatsGroupID_sp(Nullable<int> jcatsGroupID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var jcatsGroupIDParameter = jcatsGroupID.HasValue ?
                new ObjectParameter("JcatsGroupID", jcatsGroupID) :
                new ObjectParameter("JcatsGroupID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_SecurityGetByJcatsGroupID_sp_Result>("pd_SecurityGetByJcatsGroupID_sp", jcatsGroupIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_SecurityGetByNotJcatsGroupID_sp_Result> pd_SecurityGetByNotJcatsGroupID_sp(Nullable<int> jcatsGroupID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var jcatsGroupIDParameter = jcatsGroupID.HasValue ?
                new ObjectParameter("JcatsGroupID", jcatsGroupID) :
                new ObjectParameter("JcatsGroupID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_SecurityGetByNotJcatsGroupID_sp_Result>("pd_SecurityGetByNotJcatsGroupID_sp", jcatsGroupIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_JcatsGroupGet_sp_Result> pd_JcatsGroupGet_sp(Nullable<int> jcatsGroupID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var jcatsGroupIDParameter = jcatsGroupID.HasValue ?
                new ObjectParameter("JcatsGroupID", jcatsGroupID) :
                new ObjectParameter("JcatsGroupID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_JcatsGroupGet_sp_Result>("pd_JcatsGroupGet_sp", jcatsGroupIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_PetitionGetClosedByRoleID_sp_Result> pd_PetitionGetClosedByRoleID_sp(Nullable<int> roleID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_PetitionGetClosedByRoleID_sp_Result>("pd_PetitionGetClosedByRoleID_sp", roleIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_RoleGet_sp_Result> pd_RoleGet_sp(Nullable<int> roleID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_RoleGet_sp_Result>("pd_RoleGet_sp", roleIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<NG_com_NavigationGetByCurrentURL_sp_Result> NG_com_NavigationGetByCurrentURL_sp(string currentURL, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var currentURLParameter = currentURL != null ?
                new ObjectParameter("CurrentURL", currentURL) :
                new ObjectParameter("CurrentURL", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NG_com_NavigationGetByCurrentURL_sp_Result>("NG_com_NavigationGetByCurrentURL_sp", currentURLParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_NoteGetByCaseID_sp_Result> pd_NoteGetByCaseID_sp(Nullable<int> caseID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_NoteGetByCaseID_sp_Result>("pd_NoteGetByCaseID_sp", caseIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> pd_PetitionRoleInsert_sp(ObjectParameter petitionRoleID, Nullable<int> agencyID, Nullable<int> petitionID, Nullable<int> roleID, Nullable<int> recordStateID, ObjectParameter recordTimeStamp, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var agencyIDParameter = agencyID.HasValue ?
                new ObjectParameter("AgencyID", agencyID) :
                new ObjectParameter("AgencyID", typeof(int));
    
            var petitionIDParameter = petitionID.HasValue ?
                new ObjectParameter("PetitionID", petitionID) :
                new ObjectParameter("PetitionID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var recordStateIDParameter = recordStateID.HasValue ?
                new ObjectParameter("RecordStateID", recordStateID) :
                new ObjectParameter("RecordStateID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("pd_PetitionRoleInsert_sp", petitionRoleID, agencyIDParameter, petitionIDParameter, roleIDParameter, recordStateIDParameter, recordTimeStamp, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual int pd_PetitionRoleDelete_sp(Nullable<int> iD, string recordTimeStamp, Nullable<int> userID, Nullable<System.Guid> batchLogJobID, string loadOption, Nullable<int> recordStateID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var recordTimeStampParameter = recordTimeStamp != null ?
                new ObjectParameter("RecordTimeStamp", recordTimeStamp) :
                new ObjectParameter("RecordTimeStamp", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            var loadOptionParameter = loadOption != null ?
                new ObjectParameter("LoadOption", loadOption) :
                new ObjectParameter("LoadOption", typeof(string));
    
            var recordStateIDParameter = recordStateID.HasValue ?
                new ObjectParameter("RecordStateID", recordStateID) :
                new ObjectParameter("RecordStateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_PetitionRoleDelete_sp", iDParameter, recordTimeStampParameter, userIDParameter, batchLogJobIDParameter, loadOptionParameter, recordStateIDParameter);
        }
    
        public virtual int pd_PetitionUpdate_sp(Nullable<int> petitionID, Nullable<int> agencyID, Nullable<int> caseID, Nullable<System.DateTime> petitionFileDate, string petitionDocketNumber, Nullable<int> petitionTypeCodeID, Nullable<System.DateTime> petitionCloseDate, Nullable<int> recordStateID, ObjectParameter recordTimeStamp, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var petitionIDParameter = petitionID.HasValue ?
                new ObjectParameter("PetitionID", petitionID) :
                new ObjectParameter("PetitionID", typeof(int));
    
            var agencyIDParameter = agencyID.HasValue ?
                new ObjectParameter("AgencyID", agencyID) :
                new ObjectParameter("AgencyID", typeof(int));
    
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(int));
    
            var petitionFileDateParameter = petitionFileDate.HasValue ?
                new ObjectParameter("PetitionFileDate", petitionFileDate) :
                new ObjectParameter("PetitionFileDate", typeof(System.DateTime));
    
            var petitionDocketNumberParameter = petitionDocketNumber != null ?
                new ObjectParameter("PetitionDocketNumber", petitionDocketNumber) :
                new ObjectParameter("PetitionDocketNumber", typeof(string));
    
            var petitionTypeCodeIDParameter = petitionTypeCodeID.HasValue ?
                new ObjectParameter("PetitionTypeCodeID", petitionTypeCodeID) :
                new ObjectParameter("PetitionTypeCodeID", typeof(int));
    
            var petitionCloseDateParameter = petitionCloseDate.HasValue ?
                new ObjectParameter("PetitionCloseDate", petitionCloseDate) :
                new ObjectParameter("PetitionCloseDate", typeof(System.DateTime));
    
            var recordStateIDParameter = recordStateID.HasValue ?
                new ObjectParameter("RecordStateID", recordStateID) :
                new ObjectParameter("RecordStateID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pd_PetitionUpdate_sp", petitionIDParameter, agencyIDParameter, caseIDParameter, petitionFileDateParameter, petitionDocketNumberParameter, petitionTypeCodeIDParameter, petitionCloseDateParameter, recordStateIDParameter, recordTimeStamp, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CaseAttributeInsert_sp(ObjectParameter caseAttributeID, Nullable<int> caseID, Nullable<int> caseAttributeTypeID, string caseAttributeGenericValue, Nullable<int> tableID, Nullable<int> recordStateID, ObjectParameter recordTimeStamp, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(int));
    
            var caseAttributeTypeIDParameter = caseAttributeTypeID.HasValue ?
                new ObjectParameter("CaseAttributeTypeID", caseAttributeTypeID) :
                new ObjectParameter("CaseAttributeTypeID", typeof(int));
    
            var caseAttributeGenericValueParameter = caseAttributeGenericValue != null ?
                new ObjectParameter("CaseAttributeGenericValue", caseAttributeGenericValue) :
                new ObjectParameter("CaseAttributeGenericValue", typeof(string));
    
            var tableIDParameter = tableID.HasValue ?
                new ObjectParameter("TableID", tableID) :
                new ObjectParameter("TableID", typeof(int));
    
            var recordStateIDParameter = recordStateID.HasValue ?
                new ObjectParameter("RecordStateID", recordStateID) :
                new ObjectParameter("RecordStateID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CaseAttributeInsert_sp", caseAttributeID, caseIDParameter, caseAttributeTypeIDParameter, caseAttributeGenericValueParameter, tableIDParameter, recordStateIDParameter, recordTimeStamp, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual int sup_CasePetitionNumberSet_sp(Nullable<int> caseID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID, Nullable<int> adminFlag)
        {
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            var adminFlagParameter = adminFlag.HasValue ?
                new ObjectParameter("AdminFlag", adminFlag) :
                new ObjectParameter("AdminFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sup_CasePetitionNumberSet_sp", caseIDParameter, userIDParameter, batchLogJobIDParameter, adminFlagParameter);
        }
    
        public virtual int sup_SetAttorneyFlags_sp(Nullable<int> caseID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID, Nullable<int> adminFlag)
        {
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            var adminFlagParameter = adminFlag.HasValue ?
                new ObjectParameter("AdminFlag", adminFlag) :
                new ObjectParameter("AdminFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sup_SetAttorneyFlags_sp", caseIDParameter, userIDParameter, batchLogJobIDParameter, adminFlagParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> pd_AgencyAttorneyGetRoleType_sp(Nullable<int> agencyID, Nullable<int> caseID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var agencyIDParameter = agencyID.HasValue ?
                new ObjectParameter("AgencyID", agencyID) :
                new ObjectParameter("AgencyID", typeof(int));
    
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("pd_AgencyAttorneyGetRoleType_sp", agencyIDParameter, caseIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> pd_PetitionInsert_sp(ObjectParameter petitionID, Nullable<int> agencyID, Nullable<int> caseID, Nullable<System.DateTime> petitionFileDate, string petitionDocketNumber, Nullable<int> petitionTypeCodeID, Nullable<System.DateTime> petitionCloseDate, Nullable<int> recordStateID, ObjectParameter recordTimeStamp, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var agencyIDParameter = agencyID.HasValue ?
                new ObjectParameter("AgencyID", agencyID) :
                new ObjectParameter("AgencyID", typeof(int));
    
            var caseIDParameter = caseID.HasValue ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(int));
    
            var petitionFileDateParameter = petitionFileDate.HasValue ?
                new ObjectParameter("PetitionFileDate", petitionFileDate) :
                new ObjectParameter("PetitionFileDate", typeof(System.DateTime));
    
            var petitionDocketNumberParameter = petitionDocketNumber != null ?
                new ObjectParameter("PetitionDocketNumber", petitionDocketNumber) :
                new ObjectParameter("PetitionDocketNumber", typeof(string));
    
            var petitionTypeCodeIDParameter = petitionTypeCodeID.HasValue ?
                new ObjectParameter("PetitionTypeCodeID", petitionTypeCodeID) :
                new ObjectParameter("PetitionTypeCodeID", typeof(int));
    
            var petitionCloseDateParameter = petitionCloseDate.HasValue ?
                new ObjectParameter("PetitionCloseDate", petitionCloseDate) :
                new ObjectParameter("PetitionCloseDate", typeof(System.DateTime));
    
            var recordStateIDParameter = recordStateID.HasValue ?
                new ObjectParameter("RecordStateID", recordStateID) :
                new ObjectParameter("RecordStateID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("pd_PetitionInsert_sp", petitionID, agencyIDParameter, caseIDParameter, petitionFileDateParameter, petitionDocketNumberParameter, petitionTypeCodeIDParameter, petitionCloseDateParameter, recordStateIDParameter, recordTimeStamp, userIDParameter, batchLogJobIDParameter);
        }
    
        public virtual ObjectResult<pd_LegalNumberGetByPersonID_sp_Result> pd_LegalNumberGetByPersonID_sp(Nullable<int> personID, Nullable<int> userID, Nullable<System.Guid> batchLogJobID)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var batchLogJobIDParameter = batchLogJobID.HasValue ?
                new ObjectParameter("BatchLogJobID", batchLogJobID) :
                new ObjectParameter("BatchLogJobID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pd_LegalNumberGetByPersonID_sp_Result>("pd_LegalNumberGetByPersonID_sp", personIDParameter, userIDParameter, batchLogJobIDParameter);
        }
    }
}
