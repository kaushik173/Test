// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace LALoDep.Controllers
{
    public partial class MonthlyInvoiceListController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected MonthlyInvoiceListController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditInvoice()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditInvoice);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddInvoice()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddInvoice);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PrintInvoice()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrintInvoice);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public MonthlyInvoiceListController Actions { get { return MVC.MonthlyInvoiceList; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "MonthlyInvoiceList";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "MonthlyInvoiceList";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Search = "Search";
            public readonly string EditInvoice = "EditInvoice";
            public readonly string AddInvoice = "AddInvoice";
            public readonly string AddInvoiceSave = "AddInvoiceSave";
            public readonly string PrintInvoice = "PrintInvoice";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Search = "Search";
            public const string EditInvoice = "EditInvoice";
            public const string AddInvoice = "AddInvoice";
            public const string AddInvoiceSave = "AddInvoiceSave";
            public const string PrintInvoice = "PrintInvoice";
        }


        static readonly ActionParamsClass_Search s_params_Search = new ActionParamsClass_Search();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Search SearchParams { get { return s_params_Search; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Search
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_EditInvoice s_params_EditInvoice = new ActionParamsClass_EditInvoice();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditInvoice EditInvoiceParams { get { return s_params_EditInvoice; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditInvoice
        {
            public readonly string id = "id";
            public readonly string viewModel = "viewModel";
        }
        static readonly ActionParamsClass_AddInvoice s_params_AddInvoice = new ActionParamsClass_AddInvoice();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddInvoice AddInvoiceParams { get { return s_params_AddInvoice; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddInvoice
        {
            public readonly string addInvoiceFor = "addInvoiceFor";
            public readonly string asOfDate = "asOfDate";
        }
        static readonly ActionParamsClass_PrintInvoice s_params_PrintInvoice = new ActionParamsClass_PrintInvoice();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PrintInvoice PrintInvoiceParams { get { return s_params_PrintInvoice; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PrintInvoice
        {
            public readonly string id = "id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string AddInvoice = "AddInvoice";
                public readonly string EditInvoice = "EditInvoice";
                public readonly string Search = "Search";
            }
            public readonly string AddInvoice = "~/Views/MonthlyInvoiceList/AddInvoice.cshtml";
            public readonly string EditInvoice = "~/Views/MonthlyInvoiceList/EditInvoice.cshtml";
            public readonly string Search = "~/Views/MonthlyInvoiceList/Search.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_MonthlyInvoiceListController : LALoDep.Controllers.MonthlyInvoiceListController
    {
        public T4MVC_MonthlyInvoiceListController() : base(Dummy.Instance) { }

        [NonAction]
        partial void SearchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Search()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Search);
            SearchOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SearchOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, LALoDep.Models.MonthlyInvoiceListViewModel model);

        [NonAction]
        public override System.Web.Mvc.JsonResult Search(LALoDep.Models.MonthlyInvoiceListViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Search);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            SearchOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void EditInvoiceOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditInvoice(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditInvoice);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            EditInvoiceOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void EditInvoiceOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, LALoDep.Models.Task.MonthlyInvoiceEditModel viewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditInvoice(LALoDep.Models.Task.MonthlyInvoiceEditModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditInvoice);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            EditInvoiceOverride(callInfo, viewModel);
            return callInfo;
        }

        [NonAction]
        partial void AddInvoiceOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string addInvoiceFor, string asOfDate);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddInvoice(string addInvoiceFor, string asOfDate)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddInvoice);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "addInvoiceFor", addInvoiceFor);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "asOfDate", asOfDate);
            AddInvoiceOverride(callInfo, addInvoiceFor, asOfDate);
            return callInfo;
        }

        [NonAction]
        partial void AddInvoiceSaveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddInvoiceSave()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddInvoiceSave);
            AddInvoiceSaveOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void PrintInvoiceOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult PrintInvoice(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrintInvoice);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            PrintInvoiceOverride(callInfo, id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
