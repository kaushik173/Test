// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly MobileClass s_Mobile = new MobileClass();
    public static MobileClass Mobile { get { return s_Mobile; } }
    public static LALoDep.Controllers.AccountController Account = new LALoDep.Controllers.T4MVC_AccountController();
    public static LALoDep.Controllers.Administration.AdministrationController Administration = new LALoDep.Controllers.Administration.T4MVC_AdministrationController();
    public static LALoDep.Controllers.Administration.CaseCleanupController CaseCleanup = new LALoDep.Controllers.Administration.T4MVC_CaseCleanupController();
    public static LALoDep.Controllers.Administration.CodeTablesController CodeTables = new LALoDep.Controllers.Administration.T4MVC_CodeTablesController();
    public static LALoDep.Controllers.Administration.CountyCounselListController CountyCounselList = new LALoDep.Controllers.Administration.T4MVC_CountyCounselListController();
    public static LALoDep.Controllers.Administration.HearingRatesController HearingRates = new LALoDep.Controllers.Administration.T4MVC_HearingRatesController();
    public static LALoDep.Controllers.Administration.JudicialOfficerController JudicialOfficer = new LALoDep.Controllers.Administration.T4MVC_JudicialOfficerController();
    public static LALoDep.Controllers.Administration.TrainingSummaryController TrainingSummary = new LALoDep.Controllers.Administration.T4MVC_TrainingSummaryController();
    public static LALoDep.Controllers.Administration.UserGroupsController UserGroups = new LALoDep.Controllers.Administration.T4MVC_UserGroupsController();
    public static LALoDep.Controllers.Administration.UsersController Users = new LALoDep.Controllers.Administration.T4MVC_UsersController();
    public static LALoDep.Controllers.ARSummaryController ARSummary = new LALoDep.Controllers.T4MVC_ARSummaryController();
    public static LALoDep.Controllers.CaseController Case = new LALoDep.Controllers.T4MVC_CaseController();
    public static LALoDep.Controllers.Case.MotionsController Motions = new LALoDep.Controllers.Case.T4MVC_MotionsController();
    public static LALoDep.Controllers.Case.WritsAppealsController WritsAppeals = new LALoDep.Controllers.Case.T4MVC_WritsAppealsController();
    public static LALoDep.Controllers.CaseOpening.CaseOpeningController CaseOpening = new LALoDep.Controllers.CaseOpening.T4MVC_CaseOpeningController();
    public static LALoDep.Controllers.HelpController Help = new LALoDep.Controllers.T4MVC_HelpController();
    public static LALoDep.Controllers.HomeController Home = new LALoDep.Controllers.T4MVC_HomeController();
    public static LALoDep.Controllers.HourlyInvoiceListController HourlyInvoiceList = new LALoDep.Controllers.T4MVC_HourlyInvoiceListController();
    public static LALoDep.Controllers.InquiryController Inquiry = new LALoDep.Controllers.T4MVC_InquiryController();
    public static LALoDep.Controllers.Inquiry.InvoiceController Invoice = new LALoDep.Controllers.Inquiry.T4MVC_InvoiceController();
    public static LALoDep.Controllers.Inquiry.InvoiceQueueController InvoiceQueue = new LALoDep.Controllers.Inquiry.T4MVC_InvoiceQueueController();
    public static LALoDep.Controllers.MailController Mail = new LALoDep.Controllers.T4MVC_MailController();
    public static LALoDep.Controllers.MenuController Menu = new LALoDep.Controllers.T4MVC_MenuController();
    public static LALoDep.Controllers.MonthlyInvoiceListController MonthlyInvoiceList = new LALoDep.Controllers.T4MVC_MonthlyInvoiceListController();
    public static LALoDep.Controllers.MyReportController MyReport = new LALoDep.Controllers.T4MVC_MyReportController();
    public static LALoDep.Controllers.Note.NoteController Note = new LALoDep.Controllers.Note.T4MVC_NoteController();
    public static LALoDep.Controllers.QHEController QHE = new LALoDep.Controllers.T4MVC_QHEController();
    public static LALoDep.Controllers.SCCInvoiceQueueController SCCInvoiceQueue = new LALoDep.Controllers.T4MVC_SCCInvoiceQueueController();
    public static LALoDep.Controllers.SearchByPhysicalFileController SearchByPhysicalFile = new LALoDep.Controllers.T4MVC_SearchByPhysicalFileController();
    public static LALoDep.Controllers.TaskController Task = new LALoDep.Controllers.T4MVC_TaskController();
    public static LALoDep.Controllers.TwilioWebhookController TwilioWebhook = new LALoDep.Controllers.T4MVC_TwilioWebhookController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class MobileClass
    {
        public readonly string Name = "Mobile";
        public LALoDep.Areas.Mobile.Controllers.AccountController Account = new LALoDep.Areas.Mobile.Controllers.T4MVC_AccountController();
        public LALoDep.Areas.Mobile.Controllers.CaseController Case = new LALoDep.Areas.Mobile.Controllers.T4MVC_CaseController();
        public LALoDep.Areas.Mobile.Controllers.MenuController Menu = new LALoDep.Areas.Mobile.Controllers.T4MVC_MenuController();
        public LALoDep.Areas.Mobile.Controllers.MyCalendarController MyCalendar = new LALoDep.Areas.Mobile.Controllers.T4MVC_MyCalendarController();
        public T4MVC.Mobile.SharedController Shared = new T4MVC.Mobile.SharedController();
    }
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_PartialViewResult : System.Web.Mvc.PartialViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_PartialViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_ActionMailer_Net_Mvc_EmailResult : ActionMailer.Net.Mvc.EmailResult, IT4MVCActionResult
{
    public T4MVC_ActionMailer_Net_Mvc_EmailResult(string area, string controller, string action, string protocol = null): base(default(ActionMailer.Net.IMailInterceptor), default(ActionMailer.Net.IMailSender), default(System.Net.Mail.MailMessage), " ", " ", default(System.Text.Encoding), default(bool))
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_Twilio_AspNet_Mvc_TwiMLResult : Twilio.AspNet.Mvc.TwiMLResult, IT4MVCActionResult
{
    public T4MVC_Twilio_AspNet_Mvc_TwiMLResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Application_Script {
            private const string URLPATH = "~/Scripts/Application-Script";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Administration {
                private const string URLPATH = "~/Scripts/Application-Script/Administration";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string CodeTable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/CodeTable.min.js") ? Url("CodeTable.min.js") : Url("CodeTable.js");
                public static readonly string CodeTableValues_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/CodeTableValues.min.js") ? Url("CodeTableValues.min.js") : Url("CodeTableValues.js");
                public static readonly string CountyCounsel_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/CountyCounsel.min.js") ? Url("CountyCounsel.min.js") : Url("CountyCounsel.js");
                public static readonly string CountyCounselAddEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/CountyCounselAddEdit.min.js") ? Url("CountyCounselAddEdit.min.js") : Url("CountyCounselAddEdit.js");
                public static readonly string EditUserGroup_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/EditUserGroup.min.js") ? Url("EditUserGroup.min.js") : Url("EditUserGroup.js");
                public static readonly string GroupSecurity_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/GroupSecurity.min.js") ? Url("GroupSecurity.min.js") : Url("GroupSecurity.js");
                public static readonly string GroupSecurityBySI_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/GroupSecurityBySI.min.js") ? Url("GroupSecurityBySI.min.js") : Url("GroupSecurityBySI.js");
                public static readonly string HearingRates_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/HearingRates.min.js") ? Url("HearingRates.min.js") : Url("HearingRates.js");
                public static readonly string HearingRatesAddEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/HearingRatesAddEdit.min.js") ? Url("HearingRatesAddEdit.min.js") : Url("HearingRatesAddEdit.js");
                public static readonly string JudicialOfficerAddEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/JudicialOfficerAddEdit.min.js") ? Url("JudicialOfficerAddEdit.min.js") : Url("JudicialOfficerAddEdit.js");
                public static readonly string PredeterminedAnswersAddEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PredeterminedAnswersAddEdit.min.js") ? Url("PredeterminedAnswersAddEdit.min.js") : Url("PredeterminedAnswersAddEdit.js");
                public static readonly string SystemValueList_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SystemValueList.min.js") ? Url("SystemValueList.min.js") : Url("SystemValueList.js");
                public static readonly string Training_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Training.min.js") ? Url("Training.min.js") : Url("Training.js");
                public static readonly string TrainingEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/TrainingEdit.min.js") ? Url("TrainingEdit.min.js") : Url("TrainingEdit.js");
                public static readonly string TrainingSummary_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/TrainingSummary.min.js") ? Url("TrainingSummary.min.js") : Url("TrainingSummary.js");
                public static readonly string UserGroups_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/UserGroups.min.js") ? Url("UserGroups.min.js") : Url("UserGroups.js");
                public static readonly string Users_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Users.min.js") ? Url("Users.min.js") : Url("Users.js");
                public static readonly string UsersAddEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/UsersAddEdit.min.js") ? Url("UsersAddEdit.min.js") : Url("UsersAddEdit.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Case {
                private const string URLPATH = "~/Scripts/Application-Script/Case";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ActionRequestEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ActionRequestEdit.min.js") ? Url("ActionRequestEdit.min.js") : Url("ActionRequestEdit.js");
                public static readonly string Advisements_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Advisements.min.js") ? Url("Advisements.min.js") : Url("Advisements.js");
                public static readonly string AkasAddEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AkasAddEdit.min.js") ? Url("AkasAddEdit.min.js") : Url("AkasAddEdit.js");
                public static readonly string AkasList_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AkasList.min.js") ? Url("AkasList.min.js") : Url("AkasList.js");
                public static readonly string Appeals_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Appeals.min.js") ? Url("Appeals.min.js") : Url("Appeals.js");
                public static readonly string AppealsDecisionAddEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AppealsDecisionAddEdit.min.js") ? Url("AppealsDecisionAddEdit.min.js") : Url("AppealsDecisionAddEdit.js");
                public static readonly string Conflict_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Conflict.min.js") ? Url("Conflict.min.js") : Url("Conflict.js");
                public static readonly string ContactInformation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ContactInformation.min.js") ? Url("ContactInformation.min.js") : Url("ContactInformation.js");
                public static readonly string CopyCaseTransfer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/CopyCaseTransfer.min.js") ? Url("CopyCaseTransfer.min.js") : Url("CopyCaseTransfer.js");
                public static readonly string CreateOtherAgencyCase_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/CreateOtherAgencyCase.min.js") ? Url("CreateOtherAgencyCase.min.js") : Url("CreateOtherAgencyCase.js");
                public static readonly string EditPerson_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/EditPerson.min.js") ? Url("EditPerson.min.js") : Url("EditPerson.js");
                public static readonly string Expense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Expense.min.js") ? Url("Expense.min.js") : Url("Expense.js");
                public static readonly string ExpenseNG_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ExpenseNG.min.js") ? Url("ExpenseNG.min.js") : Url("ExpenseNG.js");
                public static readonly string LegalNumber_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/LegalNumber.min.js") ? Url("LegalNumber.min.js") : Url("LegalNumber.js");
                public static readonly string LegalNumberAddEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/LegalNumberAddEdit.min.js") ? Url("LegalNumberAddEdit.min.js") : Url("LegalNumberAddEdit.js");
                public static readonly string MotionAddEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MotionAddEdit.min.js") ? Url("MotionAddEdit.min.js") : Url("MotionAddEdit.js");
                public static readonly string Motions_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Motions.min.js") ? Url("Motions.min.js") : Url("Motions.js");
                public static readonly string NoteAddEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/NoteAddEdit.min.js") ? Url("NoteAddEdit.min.js") : Url("NoteAddEdit.js");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class QHE {
                    private const string URLPATH = "~/Scripts/Application-Script/Case/QHE";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string HearingEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/HearingEdit.min.js") ? Url("HearingEdit.min.js") : Url("HearingEdit.js");
                    public static readonly string NextHearing_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/NextHearing.min.js") ? Url("NextHearing.min.js") : Url("NextHearing.js");
                    public static readonly string RecordTime_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/RecordTime.min.js") ? Url("RecordTime.min.js") : Url("RecordTime.js");
                    public static readonly string RecordTimeAdd_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/RecordTimeAdd.min.js") ? Url("RecordTimeAdd.min.js") : Url("RecordTimeAdd.js");
                    public static readonly string RecordTimeEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/RecordTimeEdit.min.js") ? Url("RecordTimeEdit.min.js") : Url("RecordTimeEdit.js");
                }
            
                public static readonly string RecordTime_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/RecordTime.min.js") ? Url("RecordTime.min.js") : Url("RecordTime.js");
                public static readonly string RecordTimeAdd_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/RecordTimeAdd.min.js") ? Url("RecordTimeAdd.min.js") : Url("RecordTimeAdd.js");
                public static readonly string RecordTimeEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/RecordTimeEdit.min.js") ? Url("RecordTimeEdit.min.js") : Url("RecordTimeEdit.js");
                public static readonly string SubpoenaList_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SubpoenaList.min.js") ? Url("SubpoenaList.min.js") : Url("SubpoenaList.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class CaseOpening {
                private const string URLPATH = "~/Scripts/Application-Script/CaseOpening";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ActionRequest_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ActionRequest.min.js") ? Url("ActionRequest.min.js") : Url("ActionRequest.js");
                public static readonly string ActionRequestAdd_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ActionRequestAdd.min.js") ? Url("ActionRequestAdd.min.js") : Url("ActionRequestAdd.js");
                public static readonly string AddApptCase_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AddApptCase.min.js") ? Url("AddApptCase.min.js") : Url("AddApptCase.js");
                public static readonly string AddCaseRespondents_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AddCaseRespondents.min.js") ? Url("AddCaseRespondents.min.js") : Url("AddCaseRespondents.js");
                public static readonly string Associations_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Associations.min.js") ? Url("Associations.min.js") : Url("Associations.js");
                public static readonly string CaseAddressEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/CaseAddressEdit.min.js") ? Url("CaseAddressEdit.min.js") : Url("CaseAddressEdit.js");
                public static readonly string CaseAddresses_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/CaseAddresses.min.js") ? Url("CaseAddresses.min.js") : Url("CaseAddresses.js");
                public static readonly string Hearing_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Hearing.min.js") ? Url("Hearing.min.js") : Url("Hearing.js");
                public static readonly string HearingEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/HearingEdit.min.js") ? Url("HearingEdit.min.js") : Url("HearingEdit.js");
                public static readonly string LegalNumbers_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/LegalNumbers.min.js") ? Url("LegalNumbers.min.js") : Url("LegalNumbers.js");
                public static readonly string LegalParties_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/LegalParties.min.js") ? Url("LegalParties.min.js") : Url("LegalParties.js");
                public static readonly string Notes_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Notes.min.js") ? Url("Notes.min.js") : Url("Notes.js");
                public static readonly string PetitionAddEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PetitionAddEdit.min.js") ? Url("PetitionAddEdit.min.js") : Url("PetitionAddEdit.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class FCMNotification {
                private const string URLPATH = "~/Scripts/Application-Script/FCMNotification";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string init_notification_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/init-notification.min.js") ? Url("init-notification.min.js") : Url("init-notification.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Inquiry {
                private const string URLPATH = "~/Scripts/Application-Script/Inquiry";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string AdvCaseSearch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AdvCaseSearch.min.js") ? Url("AdvCaseSearch.min.js") : Url("AdvCaseSearch.js");
                public static readonly string CaseSearch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/CaseSearch.min.js") ? Url("CaseSearch.min.js") : Url("CaseSearch.js");
                public static readonly string InvoiceQueue_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/InvoiceQueue.min.js") ? Url("InvoiceQueue.min.js") : Url("InvoiceQueue.js");
                public static readonly string MyCaseLoad_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MyCaseLoad.min.js") ? Url("MyCaseLoad.min.js") : Url("MyCaseLoad.js");
                public static readonly string MyCaseLoadV2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MyCaseLoadV2.min.js") ? Url("MyCaseLoadV2.min.js") : Url("MyCaseLoadV2.js");
                public static readonly string ReferralEventCalendar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ReferralEventCalendar.min.js") ? Url("ReferralEventCalendar.min.js") : Url("ReferralEventCalendar.js");
                public static readonly string SearchByPhysicalFile_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SearchByPhysicalFile.min.js") ? Url("SearchByPhysicalFile.min.js") : Url("SearchByPhysicalFile.js");
                public static readonly string ToDoList_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ToDoList.min.js") ? Url("ToDoList.min.js") : Url("ToDoList.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Tasks {
                private const string URLPATH = "~/Scripts/Application-Script/Tasks";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class AR {
                    private const string URLPATH = "~/Scripts/Application-Script/Tasks/AR";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string ARAddressEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ARAddressEdit.min.js") ? Url("ARAddressEdit.min.js") : Url("ARAddressEdit.js");
                    public static readonly string ARAddresses_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ARAddresses.min.js") ? Url("ARAddresses.min.js") : Url("ARAddresses.js");
                    public static readonly string EditRFD_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/EditRFD.min.js") ? Url("EditRFD.min.js") : Url("EditRFD.js");
                    public static readonly string EditRfdProfile_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/EditRfdProfile.min.js") ? Url("EditRfdProfile.min.js") : Url("EditRfdProfile.js");
                    public static readonly string EditRFDProfileQuestion_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/EditRFDProfileQuestion.min.js") ? Url("EditRFDProfileQuestion.min.js") : Url("EditRFDProfileQuestion.js");
                }
            
                public static readonly string ARSummarySearch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ARSummarySearch.min.js") ? Url("ARSummarySearch.min.js") : Url("ARSummarySearch.js");
                public static readonly string ARTransfer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ARTransfer.min.js") ? Url("ARTransfer.min.js") : Url("ARTransfer.js");
                public static readonly string BatchHearing_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/BatchHearing.min.js") ? Url("BatchHearing.min.js") : Url("BatchHearing.js");
                public static readonly string CalendarAppearanceSheet_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/CalendarAppearanceSheet.min.js") ? Url("CalendarAppearanceSheet.min.js") : Url("CalendarAppearanceSheet.js");
                public static readonly string CalendarAppearanceSheetForParent_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/CalendarAppearanceSheetForParent.min.js") ? Url("CalendarAppearanceSheetForParent.min.js") : Url("CalendarAppearanceSheetForParent.js");
                public static readonly string CalendarNumbering_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/CalendarNumbering.min.js") ? Url("CalendarNumbering.min.js") : Url("CalendarNumbering.js");
                public static readonly string CalendarToDo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/CalendarToDo.min.js") ? Url("CalendarToDo.min.js") : Url("CalendarToDo.js");
                public static readonly string HourlyInvoiceAdd_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/HourlyInvoiceAdd.min.js") ? Url("HourlyInvoiceAdd.min.js") : Url("HourlyInvoiceAdd.js");
                public static readonly string HourlyInvoiceListSearch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/HourlyInvoiceListSearch.min.js") ? Url("HourlyInvoiceListSearch.min.js") : Url("HourlyInvoiceListSearch.js");
                public static readonly string MonthlyInvoiceListSearch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MonthlyInvoiceListSearch.min.js") ? Url("MonthlyInvoiceListSearch.min.js") : Url("MonthlyInvoiceListSearch.js");
                public static readonly string MyARQueue_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MyARQueue.min.js") ? Url("MyARQueue.min.js") : Url("MyARQueue.js");
                public static readonly string QuickAddCase_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/QuickAddCase.min.js") ? Url("QuickAddCase.min.js") : Url("QuickAddCase.js");
                public static readonly string QuickAR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/QuickAR.min.js") ? Url("QuickAR.min.js") : Url("QuickAR.js");
                public static readonly string QuickCalNextHearing_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/QuickCalNextHearing.min.js") ? Url("QuickCalNextHearing.min.js") : Url("QuickCalNextHearing.js");
                public static readonly string RecordTimeNonCase_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/RecordTimeNonCase.min.js") ? Url("RecordTimeNonCase.min.js") : Url("RecordTimeNonCase.js");
                public static readonly string RecordTimeNonCaseAddEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/RecordTimeNonCaseAddEdit.min.js") ? Url("RecordTimeNonCaseAddEdit.min.js") : Url("RecordTimeNonCaseAddEdit.js");
                public static readonly string SCCInvoiceAddEdit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SCCInvoiceAddEdit.min.js") ? Url("SCCInvoiceAddEdit.min.js") : Url("SCCInvoiceAddEdit.js");
                public static readonly string SCCInvoiceQueueSearch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SCCInvoiceQueueSearch.min.js") ? Url("SCCInvoiceQueueSearch.min.js") : Url("SCCInvoiceQueueSearch.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class tutorial {
                private const string URLPATH = "~/Scripts/Application-Script/tutorial";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jtutorial_config_json = Url("jtutorial.config.json");
                public static readonly string jtutorial_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jtutorial.min.css") ? Url("jtutorial.min.css") : Url("jtutorial.css");
                public static readonly string jtutorial_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jtutorial.min.js") ? Url("jtutorial.min.js") : Url("jtutorial.js");
                public static readonly string README = Url("README");
            }
        
        }
    
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        public static readonly string device_min_js = Url("device.min.js");
        public static readonly string favicon_ico = Url("favicon.ico");
        public static readonly string jquery_2_2_0_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.2.0.intellisense.min.js") ? Url("jquery-2.2.0.intellisense.min.js") : Url("jquery-2.2.0.intellisense.js");
        public static readonly string jquery_2_2_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.2.0.min.js") ? Url("jquery-2.2.0.min.js") : Url("jquery-2.2.0.js");
        public static readonly string jquery_2_2_0_min_js = Url("jquery-2.2.0.min.js");
        public static readonly string jquery_2_2_0_min_map = Url("jquery-2.2.0.min.map");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        public static readonly string modernizr_2_8_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.8.3.min.js") ? Url("modernizr-2.8.3.min.js") : Url("modernizr-2.8.3.js");
        public static readonly string respond_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.min.js") ? Url("respond.min.js") : Url("respond.js");
        public static readonly string respond_matchmedia_addListener_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.matchmedia.addListener.min.js") ? Url("respond.matchmedia.addListener.min.js") : Url("respond.matchmedia.addListener.js");
        public static readonly string respond_matchmedia_addListener_min_js = Url("respond.matchmedia.addListener.min.js");
        public static readonly string respond_min_js = Url("respond.min.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
        public static readonly string bootstrap_theme_css_map = Url("bootstrap-theme.css.map");
        public static readonly string bootstrap_theme_min_css = Url("bootstrap-theme.min.css");
        public static readonly string bootstrap_theme_min_css_map = Url("bootstrap-theme.min.css.map");
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
        public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        public static readonly string bootstrap_min_css_map = Url("bootstrap.min.css.map");
        public static readonly string login_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/login.min.css") ? Url("login.min.css") : Url("login.css");
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class Application_Script 
            {
                public static partial class Administration 
                {
                    public static class Assets
                    {
                        public const string CodeTable_js = "~/Scripts/Application-Script/Administration/CodeTable.js"; 
                        public const string CodeTableValues_js = "~/Scripts/Application-Script/Administration/CodeTableValues.js"; 
                        public const string CountyCounsel_js = "~/Scripts/Application-Script/Administration/CountyCounsel.js"; 
                        public const string CountyCounselAddEdit_js = "~/Scripts/Application-Script/Administration/CountyCounselAddEdit.js"; 
                        public const string EditUserGroup_js = "~/Scripts/Application-Script/Administration/EditUserGroup.js"; 
                        public const string GroupSecurity_js = "~/Scripts/Application-Script/Administration/GroupSecurity.js"; 
                        public const string GroupSecurityBySI_js = "~/Scripts/Application-Script/Administration/GroupSecurityBySI.js"; 
                        public const string HearingRates_js = "~/Scripts/Application-Script/Administration/HearingRates.js"; 
                        public const string HearingRatesAddEdit_js = "~/Scripts/Application-Script/Administration/HearingRatesAddEdit.js"; 
                        public const string JudicialOfficerAddEdit_js = "~/Scripts/Application-Script/Administration/JudicialOfficerAddEdit.js"; 
                        public const string PredeterminedAnswersAddEdit_js = "~/Scripts/Application-Script/Administration/PredeterminedAnswersAddEdit.js"; 
                        public const string SystemValueList_js = "~/Scripts/Application-Script/Administration/SystemValueList.js"; 
                        public const string Training_js = "~/Scripts/Application-Script/Administration/Training.js"; 
                        public const string TrainingEdit_js = "~/Scripts/Application-Script/Administration/TrainingEdit.js"; 
                        public const string TrainingSummary_js = "~/Scripts/Application-Script/Administration/TrainingSummary.js"; 
                        public const string UserGroups_js = "~/Scripts/Application-Script/Administration/UserGroups.js"; 
                        public const string Users_js = "~/Scripts/Application-Script/Administration/Users.js"; 
                        public const string UsersAddEdit_js = "~/Scripts/Application-Script/Administration/UsersAddEdit.js"; 
                    }
                }
                public static partial class Case 
                {
                    public static partial class QHE 
                    {
                        public static class Assets
                        {
                            public const string HearingEdit_js = "~/Scripts/Application-Script/Case/QHE/HearingEdit.js"; 
                            public const string NextHearing_js = "~/Scripts/Application-Script/Case/QHE/NextHearing.js"; 
                            public const string RecordTime_js = "~/Scripts/Application-Script/Case/QHE/RecordTime.js"; 
                            public const string RecordTimeAdd_js = "~/Scripts/Application-Script/Case/QHE/RecordTimeAdd.js"; 
                            public const string RecordTimeEdit_js = "~/Scripts/Application-Script/Case/QHE/RecordTimeEdit.js"; 
                        }
                    }
                    public static class Assets
                    {
                        public const string ActionRequestEdit_js = "~/Scripts/Application-Script/Case/ActionRequestEdit.js"; 
                        public const string Advisements_js = "~/Scripts/Application-Script/Case/Advisements.js"; 
                        public const string AkasAddEdit_js = "~/Scripts/Application-Script/Case/AkasAddEdit.js"; 
                        public const string AkasList_js = "~/Scripts/Application-Script/Case/AkasList.js"; 
                        public const string Appeals_js = "~/Scripts/Application-Script/Case/Appeals.js"; 
                        public const string AppealsDecisionAddEdit_js = "~/Scripts/Application-Script/Case/AppealsDecisionAddEdit.js"; 
                        public const string Conflict_js = "~/Scripts/Application-Script/Case/Conflict.js"; 
                        public const string ContactInformation_js = "~/Scripts/Application-Script/Case/ContactInformation.js"; 
                        public const string CopyCaseTransfer_js = "~/Scripts/Application-Script/Case/CopyCaseTransfer.js"; 
                        public const string CreateOtherAgencyCase_js = "~/Scripts/Application-Script/Case/CreateOtherAgencyCase.js"; 
                        public const string EditPerson_js = "~/Scripts/Application-Script/Case/EditPerson.js"; 
                        public const string Expense_js = "~/Scripts/Application-Script/Case/Expense.js"; 
                        public const string ExpenseNG_js = "~/Scripts/Application-Script/Case/ExpenseNG.js"; 
                        public const string LegalNumber_js = "~/Scripts/Application-Script/Case/LegalNumber.js"; 
                        public const string LegalNumberAddEdit_js = "~/Scripts/Application-Script/Case/LegalNumberAddEdit.js"; 
                        public const string MotionAddEdit_js = "~/Scripts/Application-Script/Case/MotionAddEdit.js"; 
                        public const string Motions_js = "~/Scripts/Application-Script/Case/Motions.js"; 
                        public const string NoteAddEdit_js = "~/Scripts/Application-Script/Case/NoteAddEdit.js"; 
                        public const string RecordTime_js = "~/Scripts/Application-Script/Case/RecordTime.js"; 
                        public const string RecordTimeAdd_js = "~/Scripts/Application-Script/Case/RecordTimeAdd.js"; 
                        public const string RecordTimeEdit_js = "~/Scripts/Application-Script/Case/RecordTimeEdit.js"; 
                        public const string SubpoenaList_js = "~/Scripts/Application-Script/Case/SubpoenaList.js"; 
                    }
                }
                public static partial class CaseOpening 
                {
                    public static class Assets
                    {
                        public const string ActionRequest_js = "~/Scripts/Application-Script/CaseOpening/ActionRequest.js"; 
                        public const string ActionRequestAdd_js = "~/Scripts/Application-Script/CaseOpening/ActionRequestAdd.js"; 
                        public const string AddApptCase_js = "~/Scripts/Application-Script/CaseOpening/AddApptCase.js"; 
                        public const string AddCaseRespondents_js = "~/Scripts/Application-Script/CaseOpening/AddCaseRespondents.js"; 
                        public const string Associations_js = "~/Scripts/Application-Script/CaseOpening/Associations.js"; 
                        public const string CaseAddressEdit_js = "~/Scripts/Application-Script/CaseOpening/CaseAddressEdit.js"; 
                        public const string CaseAddresses_js = "~/Scripts/Application-Script/CaseOpening/CaseAddresses.js"; 
                        public const string Hearing_js = "~/Scripts/Application-Script/CaseOpening/Hearing.js"; 
                        public const string HearingEdit_js = "~/Scripts/Application-Script/CaseOpening/HearingEdit.js"; 
                        public const string LegalNumbers_js = "~/Scripts/Application-Script/CaseOpening/LegalNumbers.js"; 
                        public const string LegalParties_js = "~/Scripts/Application-Script/CaseOpening/LegalParties.js"; 
                        public const string Notes_js = "~/Scripts/Application-Script/CaseOpening/Notes.js"; 
                        public const string PetitionAddEdit_js = "~/Scripts/Application-Script/CaseOpening/PetitionAddEdit.js"; 
                    }
                }
                public static partial class FCMNotification 
                {
                    public static class Assets
                    {
                        public const string init_notification_js = "~/Scripts/Application-Script/FCMNotification/init-notification.js"; 
                    }
                }
                public static partial class Inquiry 
                {
                    public static class Assets
                    {
                        public const string AdvCaseSearch_js = "~/Scripts/Application-Script/Inquiry/AdvCaseSearch.js"; 
                        public const string CaseSearch_js = "~/Scripts/Application-Script/Inquiry/CaseSearch.js"; 
                        public const string InvoiceQueue_js = "~/Scripts/Application-Script/Inquiry/InvoiceQueue.js"; 
                        public const string MyCaseLoad_js = "~/Scripts/Application-Script/Inquiry/MyCaseLoad.js"; 
                        public const string MyCaseLoadV2_js = "~/Scripts/Application-Script/Inquiry/MyCaseLoadV2.js"; 
                        public const string ReferralEventCalendar_js = "~/Scripts/Application-Script/Inquiry/ReferralEventCalendar.js"; 
                        public const string SearchByPhysicalFile_js = "~/Scripts/Application-Script/Inquiry/SearchByPhysicalFile.js"; 
                        public const string ToDoList_js = "~/Scripts/Application-Script/Inquiry/ToDoList.js"; 
                    }
                }
                public static partial class Tasks 
                {
                    public static partial class AR 
                    {
                        public static class Assets
                        {
                            public const string ARAddressEdit_js = "~/Scripts/Application-Script/Tasks/AR/ARAddressEdit.js"; 
                            public const string ARAddresses_js = "~/Scripts/Application-Script/Tasks/AR/ARAddresses.js"; 
                            public const string EditRFD_js = "~/Scripts/Application-Script/Tasks/AR/EditRFD.js"; 
                            public const string EditRfdProfile_js = "~/Scripts/Application-Script/Tasks/AR/EditRfdProfile.js"; 
                            public const string EditRFDProfileQuestion_js = "~/Scripts/Application-Script/Tasks/AR/EditRFDProfileQuestion.js"; 
                        }
                    }
                    public static class Assets
                    {
                        public const string ARSummarySearch_js = "~/Scripts/Application-Script/Tasks/ARSummarySearch.js"; 
                        public const string ARTransfer_js = "~/Scripts/Application-Script/Tasks/ARTransfer.js"; 
                        public const string BatchHearing_js = "~/Scripts/Application-Script/Tasks/BatchHearing.js"; 
                        public const string CalendarAppearanceSheet_js = "~/Scripts/Application-Script/Tasks/CalendarAppearanceSheet.js"; 
                        public const string CalendarAppearanceSheetForParent_js = "~/Scripts/Application-Script/Tasks/CalendarAppearanceSheetForParent.js"; 
                        public const string CalendarNumbering_js = "~/Scripts/Application-Script/Tasks/CalendarNumbering.js"; 
                        public const string CalendarToDo_js = "~/Scripts/Application-Script/Tasks/CalendarToDo.js"; 
                        public const string HourlyInvoiceAdd_js = "~/Scripts/Application-Script/Tasks/HourlyInvoiceAdd.js"; 
                        public const string HourlyInvoiceListSearch_js = "~/Scripts/Application-Script/Tasks/HourlyInvoiceListSearch.js"; 
                        public const string MonthlyInvoiceListSearch_js = "~/Scripts/Application-Script/Tasks/MonthlyInvoiceListSearch.js"; 
                        public const string MyARQueue_js = "~/Scripts/Application-Script/Tasks/MyARQueue.js"; 
                        public const string QuickAddCase_js = "~/Scripts/Application-Script/Tasks/QuickAddCase.js"; 
                        public const string QuickAR_js = "~/Scripts/Application-Script/Tasks/QuickAR.js"; 
                        public const string QuickCalNextHearing_js = "~/Scripts/Application-Script/Tasks/QuickCalNextHearing.js"; 
                        public const string RecordTimeNonCase_js = "~/Scripts/Application-Script/Tasks/RecordTimeNonCase.js"; 
                        public const string RecordTimeNonCaseAddEdit_js = "~/Scripts/Application-Script/Tasks/RecordTimeNonCaseAddEdit.js"; 
                        public const string SCCInvoiceAddEdit_js = "~/Scripts/Application-Script/Tasks/SCCInvoiceAddEdit.js"; 
                        public const string SCCInvoiceQueueSearch_js = "~/Scripts/Application-Script/Tasks/SCCInvoiceQueueSearch.js"; 
                    }
                }
                public static partial class tutorial 
                {
                    public static class Assets
                    {
                        public const string jtutorial_css = "~/Scripts/Application-Script/tutorial/jtutorial.css";
                        public const string jtutorial_js = "~/Scripts/Application-Script/tutorial/jtutorial.js"; 
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public const string _references_js = "~/Scripts/_references.js"; 
                public const string bootstrap_js = "~/Scripts/bootstrap.js"; 
                public const string bootstrap_min_js = "~/Scripts/bootstrap.min.js"; 
                public const string device_min_js = "~/Scripts/device.min.js"; 
                public const string jquery_2_2_0_intellisense_js = "~/Scripts/jquery-2.2.0.intellisense.js"; 
                public const string jquery_2_2_0_js = "~/Scripts/jquery-2.2.0.js"; 
                public const string jquery_2_2_0_min_js = "~/Scripts/jquery-2.2.0.min.js"; 
                public const string jquery_validate_js = "~/Scripts/jquery.validate.js"; 
                public const string jquery_validate_min_js = "~/Scripts/jquery.validate.min.js"; 
                public const string jquery_validate_unobtrusive_js = "~/Scripts/jquery.validate.unobtrusive.js"; 
                public const string jquery_validate_unobtrusive_min_js = "~/Scripts/jquery.validate.unobtrusive.min.js"; 
                public const string modernizr_2_8_3_js = "~/Scripts/modernizr-2.8.3.js"; 
                public const string respond_js = "~/Scripts/respond.js"; 
                public const string respond_matchmedia_addListener_js = "~/Scripts/respond.matchmedia.addListener.js"; 
                public const string respond_matchmedia_addListener_min_js = "~/Scripts/respond.matchmedia.addListener.min.js"; 
                public const string respond_min_js = "~/Scripts/respond.min.js"; 
            }
        }
        public static partial class Content 
        {
            public static class Assets
            {
                public const string bootstrap_theme_css = "~/Content/bootstrap-theme.css";
                public const string bootstrap_theme_min_css = "~/Content/bootstrap-theme.min.css";
                public const string bootstrap_css = "~/Content/bootstrap.css";
                public const string bootstrap_min_css = "~/Content/bootstrap.min.css";
                public const string login_css = "~/Content/login.css";
                public const string Site_css = "~/Content/Site.css";
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


