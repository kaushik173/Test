// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace LALoDep.Controllers.Administration
{
    public partial class CodeTablesController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CodeTablesController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Values()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Values);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetCurrent()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCurrent);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddCode()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddCode);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditCode()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditCode);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CodeTablesController Actions { get { return MVC.CodeTables; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "CodeTables";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "CodeTables";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string List = "List";
            public readonly string GetCodeTableData = "GetCodeTableData";
            public readonly string Values = "Values";
            public readonly string GetCurrent = "GetCurrent";
            public readonly string AddCode = "AddCode";
            public readonly string EditCode = "EditCode";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string List = "List";
            public const string GetCodeTableData = "GetCodeTableData";
            public const string Values = "Values";
            public const string GetCurrent = "GetCurrent";
            public const string AddCode = "AddCode";
            public const string EditCode = "EditCode";
        }


        static readonly ActionParamsClass_Values s_params_Values = new ActionParamsClass_Values();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Values ValuesParams { get { return s_params_Values; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Values
        {
            public readonly string codeTypeID = "codeTypeID";
        }
        static readonly ActionParamsClass_GetCurrent s_params_GetCurrent = new ActionParamsClass_GetCurrent();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCurrent GetCurrentParams { get { return s_params_GetCurrent; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCurrent
        {
            public readonly string codeTypeID = "codeTypeID";
        }
        static readonly ActionParamsClass_AddCode s_params_AddCode = new ActionParamsClass_AddCode();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddCode AddCodeParams { get { return s_params_AddCode; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddCode
        {
            public readonly string id = "id";
            public readonly string viewModel = "viewModel";
        }
        static readonly ActionParamsClass_EditCode s_params_EditCode = new ActionParamsClass_EditCode();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditCode EditCodeParams { get { return s_params_EditCode; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditCode
        {
            public readonly string id = "id";
            public readonly string typeId = "typeId";
            public readonly string viewModel = "viewModel";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string AddCode = "AddCode";
                public readonly string EditCode = "EditCode";
                public readonly string List = "List";
                public readonly string Values = "Values";
            }
            public readonly string AddCode = "~/Views/CodeTables/AddCode.cshtml";
            public readonly string EditCode = "~/Views/CodeTables/EditCode.cshtml";
            public readonly string List = "~/Views/CodeTables/List.cshtml";
            public readonly string Values = "~/Views/CodeTables/Values.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_CodeTablesController : LALoDep.Controllers.Administration.CodeTablesController
    {
        public T4MVC_CodeTablesController() : base(Dummy.Instance) { }

        [NonAction]
        partial void ListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult List()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.List);
            ListOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetCodeTableDataOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetCodeTableData()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCodeTableData);
            GetCodeTableDataOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ValuesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string codeTypeID);

        [NonAction]
        public override System.Web.Mvc.ActionResult Values(string codeTypeID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Values);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "codeTypeID", codeTypeID);
            ValuesOverride(callInfo, codeTypeID);
            return callInfo;
        }

        [NonAction]
        partial void GetCurrentOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int codeTypeID);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetCurrent(int codeTypeID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCurrent);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "codeTypeID", codeTypeID);
            GetCurrentOverride(callInfo, codeTypeID);
            return callInfo;
        }

        [NonAction]
        partial void AddCodeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddCode(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddCode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            AddCodeOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void AddCodeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, LALoDep.Models.Administration.AddEditCodeViewModel viewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddCode(LALoDep.Models.Administration.AddEditCodeViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddCode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            AddCodeOverride(callInfo, viewModel);
            return callInfo;
        }

        [NonAction]
        partial void EditCodeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string typeId);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditCode(string id, string typeId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditCode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "typeId", typeId);
            EditCodeOverride(callInfo, id, typeId);
            return callInfo;
        }

        [NonAction]
        partial void EditCodeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, LALoDep.Models.Administration.AddEditCodeViewModel viewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditCode(LALoDep.Models.Administration.AddEditCodeViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditCode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            EditCodeOverride(callInfo, viewModel);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
