@using LALoDep.Core.Custom.Extensions
@using LALoDep.Core.Custom.Utility
@model LALoDep.Models.Inquiry.JudgeTransferViewModel
@{
    ViewBag.Title = "Judge Transfer for<br/>" + Model.PersonName;
    int tabIndex = 0;
}

<div class="row">
    <div class="col-md-12 center-block" style="padding: 0 20px 0 20px">
        <div class="widget row">
            <div class="widget-header bordered-bottom bordered-themeprimary col-xs-12">
                <span class="widget-caption">Judge Transfer</span>
            </div>
            <div class="widget-body col-xs-12">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "judgeTransfer-form", @class = "form-inline center-block" }))
                {
                    string startHours = "", startMinutes = "", startAm = "",
                        endHours = "", endMinutes = "", endAm = "";

                    if (!string.IsNullOrEmpty(Model.StartTime))
                    {
                        var startTime = DateTime.Parse(Model.StartTime);
                        startHours = int.Parse(startTime.ToString("hh")).ToString();
                        startMinutes = startTime.ToString("mm");
                        startAm = startTime.ToString("tt").Replace(".", "");
                    }

                    if (!string.IsNullOrEmpty(Model.EndTime))
                    {
                        var endTime = DateTime.Parse(Model.EndTime);
                        endHours = int.Parse(endTime.ToString("hh")).ToString();
                        endMinutes = endTime.ToString("mm");
                        endAm = endTime.ToString("tt").Replace(".", "");
                    }

                    @Html.HiddenFor(m => m.PersonID)
                    @Html.HiddenFor(m => m.StartTime)
                    @Html.HiddenFor(m => m.EndTime)

                    <div class="form-group">
                        @Html.LabelFor(m => m.TransferFromPersonID, "Transfer From", new { @class = "control-label" })
                        @Html.DropDownListFor(m => m.TransferFromPersonID, Model.HearingOfficerList, "", new { @class = "form-control input-sm", tabindex = ++tabIndex, autofocus = "autofocus" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.TransferToPersonID, "Transfer From", new { @class = "control-label" })
                        @Html.DropDownListFor(m => m.TransferToPersonID, Model.HearingOfficerList, "", new { @class = "form-control input-sm", tabindex = ++tabIndex })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.StartDate, "Start Date", new { @class = "control-label" })
                        <div class="input-group">
                            @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control input-sm date-picker", maxlength = "10", tabindex = ++tabIndex })
                            <span class="input-group-addon datepicker-trigger" style="width:auto !important;">
                                <i class="fa fa-calendar"></i>
                            </span>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                    <div class="form-group" style="width: 185px">
                        @Html.LabelFor(m => m.StartTime, "Start Time", new { @class = "control-label" })
                        <br />                        
                        <div>
                            @Html.DropDownList("StartTimeHours", Utility.GetHoursList(startHours), "", new { style = "width:54px;padding:3px;", data_oldvalue = startHours, tabindex = ++tabIndex })  :
                            @Html.DropDownList("StartTimeMinutes", Utility.GetMinutesList(startMinutes), "", new { style = "width:54px;padding:3px;", data_oldvalue = startMinutes, tabindex = ++tabIndex })
                            @Html.DropDownList("StartTimeAmPm", Utility.GetTimeAmPm(startAm), "", new { style = "width:54px;padding:3px;", data_oldvalue = startAm, tabindex = ++tabIndex })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.EndDate, "End Date", new { @class = "control-label" })
                        <div class="input-group">
                            @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control input-sm date-picker", maxlength = "10", tabindex = ++tabIndex })
                            <span class="input-group-addon datepicker-trigger" style="width:auto !important;">
                                <i class="fa fa-calendar"></i>
                            </span>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.EndTime, "End Time", new { @class = "control-label" })
                        <br />
                        <div>
                            @Html.DropDownList("EndTimeHours", Utility.GetHoursList(endHours), "", new { style = "width:54px;padding:3px;", data_oldvalue = endHours, tabindex = ++tabIndex })  :
                            @Html.DropDownList("EndTimeMinutes", Utility.GetMinutesList(endMinutes), "", new { style = "width:54px;padding:3px;", data_oldvalue = endMinutes, tabindex = ++tabIndex })
                            @Html.DropDownList("EndTimeAmPm", Utility.GetTimeAmPm(endAm), "", new { style = "width:54px;padding:3px;", data_oldvalue = endAm, tabindex = ++tabIndex })
                        </div>                      
                    </div>

                }
            </div>
        </div>
    </div>
</div>

@section fixedfooter{
    <div class="boxfloat text-center">
        <button id="btnSave" type="submit" class="btn btn-primary v-bottom default" tabindex="@(++tabIndex)">Save</button>
        <button id="btnCancel" type="button" class="btn btn-default v-bottom" tabindex="@(++tabIndex)">Cancel</button>
    </div>
}

@section scripts{
    <script type="text/javascript">
        $("#btnSave").on("click", function () {
            if (!IsValidFormRequest()) {
                return false;
            }

            if ($("#TransferFromPersonID").val() == '') {
                notifyDanger("Transfer from is required.");
                $("#TransferFromPersonID").focus();
                return false;
            }

            if ($("#TransferToPersonID").val() == '') {
                notifyDanger("Transfer To is required.");
                $("#TransferToPersonID").focus();
                return false;
            }

            if ($("#TransferFromPersonID").val() == $("#TransferToPersonID").val()) {
                notifyDanger("Can not transfer to the same person.");
                $("#TransferToPersonID").focus();
                return false;
            }

            if ($("#StartDate").val() == "") {
                $("#StartDate").focus();
                notifyDanger("Start Date is required.");
                return false;
            }

            if ($("#StartTimeHours").val() == "") {
                $("#StartTimeHours").focus();
                notifyDanger("Start time Hours is required.");
                return false;
            }

            if ($("#StartTimeMinutes").val() == "") {
                $("#StartTimeMinutes").focus();
                notifyDanger("Start time Minutes is required.");
                return false;
            }

            if ($("#StartTimeAmPm").val() == "") {
                $("#StartTimeAmPm").focus();
                notifyDanger("Start time AM/PM is required.");
                return false;
            }

            var startTime = $('#StartTimeHours').val() + ':' + $('#StartTimeMinutes').val() + ' ' + $('#StartTimeAmPm').val();
            var endTime = $('#EndTimeHours').val() + ':' + $('#EndTimeMinutes').val() + ' ' + $('#EndTimeAmPm').val();

            var yesterday= new Date();
            yesterday.setDate(yesterday.getDate() - 1);
            if (new Date($("#StartDate").val() + ' ' + startTime) < yesterday) {
                $("#StartDate").focus();
                notifyDanger("Start date can not be past.");
                return false;
            }

            if ($("#EndDate").val() == "") {
                $("#EndDate").focus();
                notifyDanger("End date is required.");
                return false;
            }

            if ($("#EndTimeHours").val() == "") {
                $("#EndTimeHours").focus();
                notifyDanger("End time Hours is required.");
                return false;
            }

            if ($("#EndMinutes").val() == "") {
                $("#EndMinutes").focus();
                notifyDanger("End time Minutes is required.");
                return false;
            }

            if ($("#EndTimeAmPm").val() == "") {
                $("#EndTimeAmPm").focus();
                notifyDanger("End time AM/PM is required.");
                return false;
            }

            if (new Date($("#StartDate").val() + ' ' + startTime) > new Date($("#EndDate").val() + ' ' + endTime)) {
                $("#EndDate").focus();
                notifyDanger("End date time can not be before start date time");
                return false;
            }

            $("#StartTime").val(startTime);
            $("#EndTime").val(endTime);

            if (hasFormChanged("judgeTransfer-form")) {
                var msg = "Do you want to transfer " + $("#TransferFromPersonID option:selected").text() + " harings for @Model.PersonName to " + $("#TransferToPersonID option:selected").text() +
                                        " for the dare range " + $("#StartDate").val() + " to " + $("#EndDate").val() + " and also end " + $("#TransferFromPersonID option:selected").text() +
                                        " and start " + $("#TransferToPersonID option:selected").text() +" on the respective cases?"

                confirmBox(msg, function (result) {
                    if (result) {
                        var data = $("#judgeTransfer-form").serialize();
                        $.ajax({
                            type: "POST", url: '/Inquiry/HearingOfficerTransfer', data: data,
                            success: function (result) {
                                RequestSubmitted();
                                if (result.isSuccess) {
                                    window.location.href = "@Url.Action(MVC.Inquiry.MyCalendar(Model.PersonID.ToEncrypt()))"
                                }
                            }
                        });
                    }
                });
            }
            else {
                notifyDanger("Nothing has been changed.");
            }
        });

        $("#btnCancel").on("click", function () {
            window.location.href = '@Url.Action(MVC.Inquiry.MyCalendar(Model.PersonID.ToEncrypt()))'
        });

        $(document).ready(function () {
            setInitialFormValues("judgeTransfer-form");
        });
        
    </script>
}