@model LALoDep.Models.EmployeeRosterViewModel
@{
    ViewBag.Title = "Employee Roster";
}

<div class="row">
    <div class="col-md-12 col-sm-12 center-block" style="padding: 0 20px 0 20px">
        <div class="widget row">
            <div class="widget-header bordered-bottom bordered-themeprimary col-xs-12">
                <span class="widget-caption">Criteria</span>
                <div class="widget-buttons">
                    &nbsp;
                </div>
            </div>
            <div class="widget-body col-xs-12">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "EmployeeRoster-form", @class = "form-inline  center-block" }))
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.AgencyID, new { @class = "control-label" })
                        @Html.DropDownListFor(m => m.AgencyID, new SelectList(Model.AgencyList, "CodeID", "CodeValue"), "", new { @class = "form-control input-sm agency-group", autofocus = "autofocus", tabindex = 1 })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.StaffPositionCodeID, new { @class = "control-label" })
                        @Html.DropDownListFor(m => m.StaffPositionCodeID, new SelectList(Model.RoleList, "CodeID", "CodeValue"), "", new { @class = "form-control input-sm agency-group", tabindex = 2 })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.LastName, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control input-sm", tabindex = 3 })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.FirstName, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control input-sm", tabindex = 4 })
                    </div>
                }
                <p></p>
                <div id="search-validation-error" class="alert alert-danger hidden">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                    At least one search parameter is required.
                </div>
            </div>
        </div>
    </div>
</div>



<div class="row" id="divSearchResult">
    <div class="col-md-12 col-sm-12 center-block" style="padding: 0 20px 0 20px">
        <div class="widget row">
            <div class="widget-header bordered-bottom bordered-themeprimary col-xs-12">
                <span class="widget-caption">Alpha Results</span>
                <div class="widget-buttons">
                    &nbsp;
                </div>
            </div>
            <div class="widget-body col-xs-12">
                <div class="table-responsive">
                    <table class="table table-bordered table-condensed table-hover table-padding table-striped" id="employeeRosterList">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Role</th>
                                <th>Work</th>
                                <th>Mobile</th>
                                <th>Primary E-Mail</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section fixedfooter{
    <div class="boxfloat text-center">
        <button id="search" type="submit" class="btn btn-primary v-bottom default" tabindex="5">Search</button>
    </div>
}

@section scripts
    {

    <script type="text/javascript">
        
        var oTable = $('#employeeRosterList').dataTable({
            //"lengthMenu": [20],
            //"lengthChange": false,
            "searching": false,
            "bSort": false,
            "scrollY": "auto",
            "scrollCollapse": true,
            "paging": false,

            "columns": [
                { "data": "StaffName" },
                { "data": "StaffPosition" },
                { "data": "WorkContact" },
                { "data": "MobileContact" },
                { "data": "EmailContact" },
            ],

            "loadingRecords": "Loading...",
            "processing": "Processing...",
            "deferRender": true
        });

        function Search() {
            var $form = $('#EmployeeRoster-form');

            if ($('#AgencyID').val().length <= 0) {
                Notify('Agency is required.', 'bottom-right', '5000', 'danger', 'fa-warning', true);
                return false;
            }
            IPadKeyboardFix();

            var data = getData();
            $.ajax({
                type: "POST", url: '/Inquiry/EmployeeRoster', data: data,
                success: function (data) {
                    setData(data);
                },
                dataType: 'json'
            });
        }

        function setData(data) {
            oTable.fnClearTable();
            if (data.data.length > 0) {
                oTable.fnAddData(data.data);
                fitCalculatedHeightForSearchDataTable();
            } else {
                Notify('No results found.', 'bottom-right', '5000', 'blue', 'fa-frown-o', true);
            }



        }

        function getData() {
            var fData = $('#EmployeeRoster-form').serialize();
            return fData;
        }

        function fitCalculatedHeightForSearchDataTable() {
            var calc_height = 0;
            if (oTable != null) {
                calc_height = $(window).height();
                var _offset = 25;

                $("#divSearchResult .dataTables_scrollBody").children().first().parentsUntil("body").each(function () {                    
                    $(this).siblings().each(function () {
                        if (calc_height > $(this).outerHeight(true) && $(this).css('display') != 'none') {
                            if ($(this).attr("id") == 'loading')
                                return;
                            calc_height = calc_height - $(this).outerHeight(true);
                        }
                    });
                    _offset = _offset + $(this).outerHeight(true) - $(this).height();
                });

                calc_height = calc_height - _offset;
                $('#divSearchResult .dataTables_scrollBody').css('max-height', calc_height + 'px');
                oTable.fnAdjustColumnSizing();
            }
            return calc_height;
        }

        $(window).bind('resize', function () {
            fitCalculatedHeightForSearchDataTable();
        });

        $('#search').on('click', function () {
            Search();
        });

        if ($("#AgencyID option").length <= 2) {
            $("#AgencyID option:eq(1)").attr("selected", "selected");
        }
    </script>

}