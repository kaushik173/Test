@using LALoDep.Custom.Security
@model LALoDep.Models.Case.ReferralAddEditViewModel
@{
    ViewBag.Title = ViewBag.DisplayTitle;
}
<style>
    .form-inline .input-group {
        display: table;
    }
    .tblDataDisplay td{
        padding-bottom:5px;
    } .widget-buttons .btn {
        padding: 2px 15px !important;
    } .form-group span{
          margin-right:10px;
      }
</style>

@Html.Action("ReferralTabs", "Case", new { id = Model.ReferralID })
<div class="row">
    <div class="col-md-12 col-sm-12 center-block" style="padding: 0 20px 0 20px">
        <div class="widget row">
            <div class="widget-header bordered-bottom bordered-themeprimary col-xs-12">
                <span class="widget-caption">@Model.ReferralHeader.ReferralHeader</span>
                <div class="widget-buttons">
              
                </div>
            </div>

            <div class="widget-body col-xs-12">
                <table class="tblDataDisplay" style="width:100%;">
                    <tr>
                        <td width="150">
                            <strong>
                                Firm / Dept:
                            </strong>
                        </td>
                        <td>
                            @Model.ReferralHeader.FirmDept
                           
                        </td>
                        <td style="width:400px;text-align:right;">
                            <a id="btnPrintNotes" class="btn  btn-default  btn-sm"> View Case Notes </a>

                            <a id="ActivityLog" class="btn  btn-default  btn-sm"> @Model.ReferralHeader.ActivityLog </a>
                            <a id="btnAttachedFile" class="btn  btn-default btn-sm"> @Model.ReferralHeader.AttachedFile </a>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <strong>
                                Client Info:
                            </strong>
                        </td>
                        <td colspan="2">
                            @Model.ReferralHeader.ClientInfo

                        </td>
                    </tr>
                    <tr>
                        <td>
                            <strong>
                                Client Address:
                            </strong>
                        </td>
                        <td colspan="2">
                            @Model.ReferralHeader.ClientAddress

                        </td>
                    </tr>
                    <tr>
                        <td>
                            <strong>
                                Next Court Dates:
                            </strong>
                        </td>
                        <td colspan="2">
                            @Model.ReferralHeader.NextCourtDates

                        </td>
                    </tr>
                </table>


                <div class="table-responsive">
                    <table class="table table-bordered table-condensed table-hover table-padding table-striped" id="tblSubpoena">
                        <thead>
                            <tr>
                                <th>Role</th>
                                <th>Name</th>
                                <th>Phone</th>
                                <th>Email</th>

                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Model.ReferralContactInfoList)
                            {
                            <tr>
                                <td>@item.RoleDisplay</td>
                                <td>@item.NameDisplay</td>
                                <td>@item.Phone</td>
                                <td>@item.Email</td>

                            </tr>
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12 col-sm-12 center-block" style="padding: 0 20px 0 20px">
        <div class="widget row">


            <div class="widget-body col-xs-12">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "ReferralAddEdit-form", @class = "form-inline  center-block" }))
                {

                    @Html.HiddenFor(m => m.ReferralID)
                    <input name="RoleID" id="RoleID" value="@Model.RoleID" type="hidden" />
                    <input name="ReferralTypeCodeID" id="ReferralTypeCodeID"  value="@Model.ReferralTypeCodeID" type="hidden" />
                   


                    <div class="form-group">
                        @Html.LabelFor(m => m.ReferralRequestDate, "Request Date", new { @class = "control-label" })
                        <div class="input-group">
                            @if (Model.ReferralID.HasValue && Model.ReferralID.Value > 0)
                            {
                            @Html.TextBoxFor(m => m.ReferralRequestDate, "{0:d}", new { @class = "form-control input-sm date-picker", @readonly = "readonly", tabindex = 1, maxlength = "10", autofocus = "autofocus" })

                            }
                            else
                            {
                            @Html.TextBoxFor(m => m.ReferralRequestDate, "{0:d}", new { @class = "form-control input-sm date-picker", @readonly = "readonly", tabindex = 1, maxlength = "10", autofocus = "autofocus" })

                            }
                            <span class="input-group-addon datepicker-trigger" style="width:auto !important;">
                                <i class="fa fa-calendar"></i>
                            </span>
                            <div class="clearfix"></div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.ReferralRequestedByPersonID, "Request By", new { @class = "control-label" })
                        @Html.DropDownListFor(m => m.ReferralRequestedByPersonID, Model.ReferralRequestedByList, "", new { @class = "form-control input-sm", tabindex = 2, @style = "width:100%" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ReferralRequestedForPersonID, "Request For", new { @class = "control-label" })
                        @Html.DropDownListFor(m => m.ReferralRequestedForPersonID, Model.ReferralRequestedForList, "", new { @class = "form-control input-sm", tabindex = 3, @style = "width:100%" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.ReferralDueDate, "Due Date", new { @class = "control-label" })
                        <div class="input-group">

                            @Html.TextBoxFor(m => m.ReferralDueDate, "{0:d}", new { @class = "form-control input-sm date-picker", tabindex = 4, maxlength = "10" })
                            <span class="input-group-addon datepicker-trigger" style="width:auto !important;">
                                <i class="fa fa-calendar"></i>
                            </span>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                    if (Model.ReferralID.HasValue && Model.ReferralID.Value > 0)
                    {
                    <div class="form-group">
                        @Html.LabelFor(m => m.ReferralEndDate, "Completed", new { @class = "control-label" })
                        @if (Model.ReferralEndDate.HasValue)
                        {
                            <div class="input-group">

                                @Html.TextBoxFor(m => m.ReferralEndDate, "{0:d}", new { @class = "form-control input-sm date-picker", tabindex = 4, maxlength = "10" })
                                <span class="input-group-addon datepicker-trigger" style="width:auto !important;">
                                    <i class="fa fa-calendar"></i>
                                </span>
                                <div class="clearfix"></div>
                            </div>

                        }
                        else
                        {  <br />
                        @Html.HiddenFor(m => m.ReferralEndDate)

                         @Html.CheckBox("chkCompleted", new { tabindex = 5 })

                        }

                    </div>
                    }
                    <div class="clearfix"></div><br />
                        <div class="form-group">
                            @Html.LabelFor(m => m.ReferralFrequencyOfUpdatesCodeID, "How often would you like updates?", new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.ReferralFrequencyOfUpdatesCodeID, Model.ReferralFrequencyOfUpdatesList, "", new { @class = "form-control input-sm", tabindex = 6, @style = "width:100%" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ReferralEducationalStatusCodeID, "Educational Status", new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.ReferralEducationalStatusCodeID, Model.ReferralEducationalStatusList, "", new { @class = "form-control input-sm", tabindex = 7, @style = "width:100%" })
                        </div>
                        <div class="clearfix"></div>
                        <br />
                        <div class="form-group">
                            @Html.LabelFor(m => m.ReferralEducationalStatusCodeID, "Additional CLC Information:", new { @class = "control-label" })
                            <br />
                            @Html.HiddenFor(m => m.ReferralCompanionCaseFlag)
                            @Html.CheckBox("ReferralCompanionCaseFlag", (Model.ReferralCompanionCaseFlag.HasValue && Model.ReferralCompanionCaseFlag.Value == 1), new { @class = "input-sm chkFlag", tabindex = 8 })
                            <span style="position:relative;top:-5px;">
                                Is there a companion case?
                            </span>
                            @Html.HiddenFor(m => m.ReferralConflictHistoryFlag)
                            @Html.CheckBox("ReferralConflictHistoryFlag", (Model.ReferralConflictHistoryFlag.HasValue && Model.ReferralConflictHistoryFlag.Value == 1), new { @class = "input-sm chkFlag", tabindex = 9 })
                            <span style="position:relative;top:-5px;">
                                Is there a conflict history?
                            </span>
                        </div>
                        <div class="clearfix"></div>
                        <br />
                        <div class="form-group">
                            @Html.LabelFor(m => m.ReferralEducationalStatusCodeID, "IEP Info:", new { @class = "control-label" })
                            <br />
                            @Html.HiddenFor(m => m.ReferralEIPFlag)


                            @Html.CheckBox("ReferralEIPFlag", (Model.ReferralEIPFlag.HasValue && Model.ReferralEIPFlag.Value == 1), new { @class = "input-sm  chkFlag", tabindex = 10 })
                            <span style="position:relative;top:-5px;">
                                Does Client Have IEP?
                            </span>
                            @Html.HiddenFor(m => m.ReferralEIPMostRecentFlag)


                            @Html.CheckBox("ReferralEIPMostRecentFlag", (Model.ReferralEIPMostRecentFlag.HasValue && Model.ReferralEIPMostRecentFlag.Value == 1), new { @class = "input-sm  chkFlag", tabindex = 11 })
                            <span style="position:relative;top:-5px;">
                                Do you have the most recent IEP and Psycho-educational assessment available?
                            </span>
                        </div>
                        <div class="clearfix"></div><br />

                        <div class="form-group col-md-12">
                            @Html.LabelFor(m => m.SpecialEducationNote, "Special Education: Describe your concerns:", new { @class = "control-label" })
                            @Html.TextAreaFor(m => m.SpecialEducationNote, new { @class = "form-control input-sm", tabindex = 12, @style = "width:100%" })
                        </div>
                        <div class="clearfix"></div><br />
                        <div class="form-group col-md-3">
                            @Html.LabelFor(m => m.ReferralSchoolPreference, "School student would like to attend?", new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.ReferralSchoolPreference, new { @class = "form-control input-sm", maxlength = 100, tabindex = 13, @style = "width:100%" })
                        </div>
                        <div class="form-group col-md-9">
                            @Html.LabelFor(m => m.SchoolProblemsNote, "Describe the problem:", new { @class = "control-label" })
                            @Html.TextAreaFor(m => m.SchoolProblemsNote, new { @class = "form-control input-sm", tabindex = 14, @style = "width:100% !important" })
                        </div>
                        <div class="clearfix"></div><br />
                        <div class="form-group col-md-12">
                            @Html.LabelFor(m => m.ExpulsionNote, "Expulsion: Does this student receive Special Education services?  Please briefly describe the incident:", new { @class = "control-label" })
                            @Html.TextAreaFor(m => m.ExpulsionNote, new { @class = "form-control input-sm", tabindex = 15, @style = "width:100%" })
                        </div>
                        <div class="clearfix"></div><br />
                        <div class="form-group col-md-12">
                            @Html.LabelFor(m => m.EducationUnitOfServiceNote, "Other: (suspensions, credits, etc.)  Please describe how the Education Unit may be of service:", new { @class = "control-label" })
                            @Html.TextAreaFor(m => m.EducationUnitOfServiceNote, new { @class = "form-control input-sm", tabindex = 16, @style = "width:100%" })
                        </div>           
                             if (Model.ReferralID.HasValue && Model.ReferralID.Value > 0)
                        {
                        <div class="clearfix"></div><br />
                        <div class="form-group">
                            @Html.LabelFor(m => m.ReferralProgramEligibilityCodeID, "Program Eligibility", new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.ReferralProgramEligibilityCodeID, Model.ReferralProgramEligibilityList, "", new { @class = "form-control input-sm", tabindex = 17, @style = "width:100%" })
                        </div>
                         
                        <div class="clearfix"></div><br />
                            <div class="form-group col-md-12">
                                @Html.LabelFor(m => m.ReferralInternalNote, "Internal Notes:", new { @class = "control-label" })
                                @Html.TextAreaFor(m => m.ReferralInternalNote, new { @class = "form-control input-sm", tabindex = 18, @style = "width:100%" })
                            </div>    }
                }
            </div>
        </div>
    </div>
</div>


@section fixedfooter{
    <div class="boxfloat text-center">
        <button id="btnSave" type="submit" class="btn btn-primary v-bottom default" tabindex="19">Save</button>
        <button id="btnCancel" type="submit" class="btn  v-bottom " tabindex="20">Cancel</button>
    </div>
}


@section scripts
{
    <script>

        function compareDates(start, end) {
            var startDate = new Date(start);
            var endDate = new Date(end);
            if (endDate < startDate) {
                return true;
            } else {
                return false;
            }
        }

        function SaveData() {
            IPadKeyboardFix();

            if (!IsValidFormRequest()) {
                return false;
            }

            if ($('#ReferralRequestedByPersonID').val() == '') {
                notifyDanger('Request By is required.');
                $("#ReferralRequestedByPersonID").focus();
                return false;
            }
            if ($('#ReferralRequestedForPersonID').val() == '') {
                notifyDanger('Request For is required.');
                $("#ReferralRequestedForPersonID").focus();
                return false;
            }
            if ($('#ReferralFrequencyOfUpdatesCodeID').val() == '') {
                notifyDanger('How often would you like updates is required.');
                $("#ReferralFrequencyOfUpdatesCodeID").focus();
                return false;
            }
            if ($('#ReferralEducationalStatusCodeID').val() == '') {
                notifyDanger('Educational Status  is required.');
                $("#ReferralEducationalStatusCodeID").focus();
                return false;
            }
            if ($('#ReferralProgramEligibilityCodeID').val() == '' && $('#ReferralID').val() > 0) {
                notifyDanger('Program Eligibility is required.');
                $("#ReferralProgramEligibilityCodeID").focus();
                return false;
            }




            if (!hasFormChanged('ReferralAddEdit-form')) {
                window.location.href = "/Case/ReferralList";
                return false;
            }

            var data = $('#ReferralAddEdit-form').serialize();

            $.ajax({
                type: "POST",
                url: '/Case/ReferralAddEdit',
                data: data,
                success: function (result) {
                    if (result.isSuccess) {

                        RequestSubmitted();


                        RedirectToBackPage();
                    }
                },
                dataType: 'json'
            });
        }

        $('#btnSave').on('click', function () {
            SaveData();
        });
        $('#btnCancel').on('click', function () {
            RedirectToBackPage();
        });
        function RedirectToBackPage()
        {

            @if (Request.QueryString["backPageUrl"] != null)
            {
                <text>
                 window.location.href = "@Request.QueryString["backPageUrl"]";
                </text>
            }
            else
            {
                <text>
                     window.location.href = "/Case/ReferralList";
                </text>
            }
        }


        $('.chkFlag').on('click', function () {
            $('#' + $(this).attr('id')).val($(this).is(':checked') ? 1 : 0)
        });
        $('#chkCompleted').on('click', function () {
            if ($(this).is(':checked'))
                $('#ReferralEndDate').val('@DateTime.Now.ToString("d")')
            else
                $('#ReferralEndDate').val('')
        });



        setInitialFormValues('ReferralAddEdit-form', true);
    </script>
}