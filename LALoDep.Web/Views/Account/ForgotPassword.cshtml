@model LALoDep.Models.AccountForgotPasswordViewModel

@{
    Layout = null;
    var summary = string.Empty;
}

<!doctype html>
<html class="fixed">
<head>

    <!-- Basic -->
    <meta charset="UTF-8">

    <meta name="keywords" content="Jcats Louisiana Dependency" />
    <meta name="description" content="Jcats Louisiana Dependency">
    <meta name="author" content="Canyon Solutions Inc.">
    <title>Jcats Louisiana Dependency</title>
    <!-- Mobile Metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />

    <!-- Web Fonts  -->
    <link href="/assets/fonts/Open-Sans/css/fonts.css" rel="stylesheet" />
    @*<link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800|Shadows+Into+Light" rel="stylesheet" type="text/css">*@
    @Styles.Render("~/assets/css/styles")
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/assets/js/jquery")

    <style>
        .loginDiv {
            margin-top: 175px;
        }

        .form-box input {
            width: 100%;
            padding: 5px;
            height: 40px;
            border: 1px solid #ccc;
            background: #fafafa;
            transition: 0.2s ease-in-out;
        }

            .form-box input[type="checkbox"] {
                height: 15px;
            }

        .loginbox-textbox {
            padding: 0px !important;
        }

        .form-box input:focus {
            outline: 0;
            background: #eee;
        }

        .form-box input[type="text"] {
            border-radius: 5px 5px 0 0;
            text-transform: lowercase;
        }

        .form-box input[type="password"] {
            border-radius: 0 0 5px 5px;
            border-top: 0;
        }

        .form-box button.login {
            margin-top: 15px;
            padding: 10px 20px;
        }

        .loginbox-bottom {
            border-top: dotted 1px #cccccc;
            margin-top: 10px;
            padding: 5px;
            text-align: center;
        }

        .login-container .loginbox {
            height: 326px !important;
        }

        body {
            background-color: white !important;
        }

            body:before {
                content: "";
                display: block;
                position: fixed;
                top: 0;
                bottom: 0;
                left: 0;
                right: 0;
                z-index: -1;
                /*background-color: #0D3B5F !important;*/
                background-color: white !important;
            }

        .loginbox {
            border-radius: 10px;
        }

        .loginbox-textbox.username .input-group {
            border: solid 1px #ccc;
            border-top-right-radius: 7px !important;
            border-top-left-radius: 7px !important;
            background: #ffffff !important;
        }

        .loginbox-textbox input, .loginbox-textbox .input-group-addon {
            background: #ffffff !important;
        }

        .loginbox-textbox.username .input-group input {
            border: 0px;
            border-top-right-radius: 7px !important;
        }

        .loginbox-textbox.username .input-group-addon {
            border: 0px;
            background: #ffffff;
            border-top-left-radius: 7px !important;
            border-bottom-left-radius: 7px !important;
        }

        .loginbox-textbox.email .input-group {
            border: solid 1px #ccc;
            border-top: solid 0px #ccc;
            border-bottom-right-radius: 7px !important;
            border-bottom-left-radius: 7px !important;
            background: #ffffff;
        }

            .loginbox-textbox.email .input-group input {
                border: 0px;
                border-bottom-right-radius: 7px !important;
            }

        .loginbox-textbox.email .input-group-addon {
            border: 0px;
            background: #ffffff;
            border-top-left-radius: 7px !important;
            border-bottom-left-radius: 7px !important;
        }


        .login-container .loginbox {
            background: #fbfbfb none repeat scroll 0 0 !important;
            height: 350px !important;
            padding: 20px;
            border: 1px solid #ebebeb !important;
            box-shadow: none;
        }

        .login-container .loginbox {
            width: 352px !important;
        }

        .loginbox-bottom a {
            color: #808080;
        }
    </style>

</head>
<body>
    <div class="loginDiv">
        @if (ViewBag.EmailSent != null)
        {
            <div class="center-div">
                <div class="alert alert-success">

                    Password reset instructions for <strong> @(Model.Username) </strong>has been sent to <strong> @(Model.EmailAddress)</strong>.  It may take a few minutes for this email to reach your inbox.  Please check your junk mail folder as well.
                </div>
                <center>
                    <a href="/Account/Login" class="btn btn-primary   btn-lg mt-lg"><< Back to Login</a>
                </center>
                <style>
                    .center-div {
                        margin: 100px auto;
                        width: 60%;
                    }

                    .login-container {
                        display: none;
                    }
                </style>
            </div>
        }


        <!-- start: page -->
        <div style="margin-left:60px">
            <center>
                <img src="/assets/img/Logo_canyon.png" />
            </center>
        </div>

        <div class="login-container animated fadeInDown margin-top-10">
            <div class="loginbox ">
                <br />
                <center><h4>JCATS Dependency. </h4></center>

                <center><h5>Forgot Password</h5></center>
                <div class="panel-body form-box">
                    <form action="/Account/ForgotPassword" method="post" id="formForgotPassword">

                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.Width)
                        @Html.HiddenFor(m => m.AvailWidth)
                        @Html.HiddenFor(m => m.Height)
                        @Html.HiddenFor(m => m.AvailHeight)

                        <div class="loginbox-textbox username">
                            <div class="input-group ">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                @Html.TextBoxFor(m => m.Username, new { @class = " ", autofocus = "autofocus", placeholder = "Username", autocapitalize = "none" })
                            </div>
                        </div>

                        <div class="loginbox-textbox email">
                            <div class="input-group ">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                                @Html.TextBoxFor(m => m.EmailAddress, new { @class = " ", placeholder = "Email Address", autocapitalize = "none" })
                           </div>
                            @Html.ValidationMessageFor(x => x.EmailAddress)


                        </div>

                        <div class="row margin-top-30">
                            <div class="text-right" style=" margin-right auto;margin-left:auto;">
                                <input type="submit" class="btn btn-info hidden-xs btn-lg btn-block" value="Send Reset Email ">
                                <button type="submit" class="btn btn-info btn-block btn-lg visible-xs mt-lg">Send Reset Email</button>
                            </div>
                        </div><br />
                        <div class="row">
                            <div class="loginbox-bottom">
                                @Html.ActionLink("<< back to login page", null, null, null, new { href = Request.UrlReferrer })
                            </div>
                        </div>

                        @{summary = string.Join("<br />", ViewData.ModelState.ToList().SelectMany(c => c.Value.Errors.Select(e => e.ErrorMessage)).ToList());
                        }
                        @*<span class="mt-lg mb-lg">
                                @Html.ValidationSummary()
                            </span>*@

                    </form>
                </div>
            </div>
        </div>
    </div>
    @Scripts.Render("~/assets/js/scripts")
    @Scripts.Render("~/scripts/js")
    <script>
        $(function () {
            var setMargin = function () {
                var margin = ($(window).height() / 2) - 230
                // $(".login-box").css("margin-top", margin + "px");
                $(".loginDiv").css("margin-top", margin + "px");
                //loginDiv
            }
            $(window).resize(function () {
                setMargin();
            })
            $(document).ready(function () {
                setMargin();
            });

            $('#Width').val(screen.width);
            $('#Height').val(screen.height);
            $('#AvailWidth').val(screen.availWidth);
            $('#AvailHeight').val(screen.availHeight);

            $('#btnClose').click(function () {
                Window.Close();
            });
        });
    </script>

    @if (@summary.Length > 0)
    {
        <script>$(document).ready(function () { Notify('@summary', 'bottom-right', '5000', 'danger', 'fa-warning', true); });</script>
    }


</body>

</html>