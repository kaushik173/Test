@model LALoDep.Models.AccountResetPasswordViewModel

@{
    Layout = null;
    var summary = string.Empty;
}

<!doctype html>
<html class="fixed">
<head>

    <!-- Basic -->
    <meta charset="UTF-8">

    <meta name="keywords" content="jcats san diego" />
    <meta name="description" content="Jcats">
    <meta name="author" content="Canyon Solutions Inc.">
    <title>Jcats Louisiana Dependency</title>
    <!-- Mobile Metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />

    <!-- Web Fonts  -->
    <link href="/assets/fonts/Open-Sans/css/fonts.css" rel="stylesheet" />
    @*<link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800|Shadows+Into+Light" rel="stylesheet" type="text/css">*@
    @Styles.Render("~/assets/css/styles")
    @Styles.Render("~/Content/css")



</head>
    <body>
     
        

        @if (ViewBag.PasswordReset != null)
        {
            <div class="alert alert-success">
                Password reset successfully!. Click <a href="/Account/Login">here</a> to redirect to login.
            </div>
            <style>
                .alert-success {
                    width: 60%;
                    margin: 100px auto;
                }

                .login-container {
                    display: none;
                }
            </style>
        }


        <!-- start: page -->
        <div class="login-container animated fadeInDown">
            <div class="loginbox bg-white">
                <div class="loginbox-title">
                    <a href="/">
                        RESET PASSWORD
                    </a>
                </div>

                <div class="panel-body">
                    <form action="/Account/ResetPassword?code=6046b0c8-da9f-40a0-9789-e9ec0a794a93" method="post" novalidate="novalidate">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.Code)

                        <div class="loginbox-textbox">
                            <b>Username:</b>     @Model.Username
                            @Html.HiddenFor(m => m.Username)
                        </div>

                        <div class="loginbox-textbox">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control input-lg", placeholder = "Password" })

                        </div>
                        <div class="loginbox-textbox">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control input-lg", placeholder = "Confirm Password" })



                        </div>


                        <div class="row">
                            <div class="col-sm-4 text-right" style="width:190px;margin-right: auto;margin-left:auto;">
                                <button type="submit" class="btn btn-primary hidden-xs">Reset Password</button>
                                <button type="submit" class="btn btn-primary btn-block btn-lg visible-xs mt-lg">Reset Password</button>
                            </div>
                        </div>

                        @{  
                        summary = string.Join("<br />", ViewData.ModelState.ToList().SelectMany(c => c.Value.Errors.Select(e => e.ErrorMessage)).ToList());


                        }
                        </form>
</div>
            </div>
        </div>
        @Scripts.Render("~/assets/js/scripts")
        @Scripts.Render("~/scripts/js")

        @if (@summary.Length > 0)
        {
            string cleanString = System.Text.RegularExpressions.Regex.Replace(summary, @"[^a-zA-Z 0-9'.@]", string.Empty).Trim();
            <script>
              $(document).ready(function ()
            {
                Notify('@Html.Raw(cleanString.Replace("\n",""))', 'bottom-right', '5000', 'danger', 'fa-warning', true);
            });
        </script>
        }
     

    </body>
</html>