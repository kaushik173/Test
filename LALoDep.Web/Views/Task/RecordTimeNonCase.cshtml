@using LALoDep.Domain.pd_Hearing
@using LALoDep.Custom.Security
@model LALoDep.Models.Task.RecordTimeViewModel
@{
    ViewBag.Title = "Record Time Non-Case";


}
<style>
    .form-inline .input-group {
        display: table;
    }
</style>
<div class="row">
    <div class="col-md-12 col-sm-12 center-block" style="padding: 0 20px 0 20px">
        <div class="widget row">
            <div class="widget-header bordered-bottom bordered-themeprimary col-xs-12">
                <span class="widget-caption">Search Criteria</span>
                <div class="widget-buttons">
                    @if (ViewBag.HearingReportFilingDue != null)
                    {
                        var arequest = ViewBag.HearingReportFilingDue as pd_HearingReportFilingDueGet_spResult;
                        @arequest.RFDHeader
                    }

                </div>
            </div>
            <div class="widget-body col-xs-12">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "recordTime-form", @class = "form-inline  center-block" }))
                {
                    if (ViewBag.HearingReportFilingDue != null)
                    {
                @Html.Hidden("ARID", Request.QueryString["arId"])
                    }
                    <div class="form-group">
                        @Html.LabelFor(m => m.StartDate, "Start Date", new { @class = "control-label" })
                        <div class="input-group">

                            @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control input-sm date-picker", style = "width:100%;", tabindex = 1, maxlength = "10", autofocus = "autofocus" })
                            <span class="input-group-addon datepicker-trigger" style="width:auto !important;">
                                <i class="fa fa-calendar"></i>
                            </span>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.EndDate, "End Date", new { @class = "control-label" })
                        <div class="input-group">

                            @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control input-sm date-picker", style = "width:100%;", tabindex = 2, maxlength = "10" })
                            <span class="input-group-addon datepicker-trigger" style="width:auto !important;">
                                <i class="fa fa-calendar"></i>
                            </span>
                            <div class="clearfix"></div>
                        </div>
                    </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.StaffMemberID, "Staff Member", new { @class = "control-label" })
                    @if (Model.StaffMemberList.Count == 1)
                    {
                        @Html.DropDownListFor(m => m.StaffMemberID, new SelectList(Model.StaffMemberList, "PersonID", "PersonDisplay"), new { @class = "form-control input-sm", tabindex = 3, @style = "width:100%" })
                    }
                    else
                    {
                        @Html.DropDownListFor(m => m.StaffMemberID, new SelectList(Model.StaffMemberList, "PersonID", "PersonDisplay"), "", new { @class = "form-control input-sm", tabindex = 3, @style = "width:100%" })
                    }
                    
                </div>
                <div class="form-group ">
                    @Html.LabelFor(m => m.SupervisorID, "Supervisor", new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.SupervisorID, new SelectList(Model.SupervisorList, "PersonID", "PersonDisplay"), "", new { @class = "form-control input-sm", tabindex = 4, @style = "width:100%" })
                </div>
                <div class="form-group ">
                    @Html.LabelFor(m => m.AgencyID, "Agency", new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.AgencyID, new SelectList(Model.AgencyList, "AgencyID", "AgencyDisplay"), "", new { @class = "form-control input-sm", tabindex = 5, @style = "width:100%" })
                </div>
                <div class="form-group ">
                    @Html.LabelFor(m => m.AgencyGroupID, "Agency Group", new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.AgencyGroupID, new SelectList(Model.AgencyGroupList, "AgencyGroupID", "AgencyGroupDisplay"), "", new { @class = "form-control input-sm", tabindex = 6, @style = "width:100%" })
                </div>
                <div class="form-group ">
                    @Html.LabelFor(m => m.WorkDescriptionID, "Work Description", new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.WorkDescriptionID, new SelectList(Model.WorkDescriptionList, "CodeID", "CodeDisplay"), "", new { @class = "form-control input-sm", tabindex = 7, @style = "width:100%" })
                </div>
                }

            </div>
        </div>
    </div>
</div>
<div class="row" id="divSearchResult">
    <div class="col-md-12 col-sm-12 center-block" style="padding: 0 20px 0 20px">
        <div class="widget row">
            <div class="widget-header bordered-bottom bordered-themeprimary col-xs-12">
                <span class="widget-caption">Search Results</span>
            </div>
            <div class="widget-body col-xs-12" id="recordTimeData">
                <div class="table-responsive">
                </div>
            </div>
        </div>
    </div>
</div>


@section fixedfooter{
    <div class="boxfloat text-center">
        <button id="search" type="submit" class="btn btn-primary v-bottom default" tabindex="4">Search</button>
        @*<button id="btnPrint" type="button" class="btn v-bottom default" tabindex="5">Print</button>*@
        <button id="addNew" class="btn btn-default btn-sm" tabindex="6" data-secure-id="@((int)SecurityToken.RecordTimeAdd)" title="Add Time">Add Time</button>
      
    </div>
}


@section scripts
{
    
<script src="@Url.Content("~/Scripts/Application-Script/Tasks/RecordTimeNonCase.js?v=" + Guid.NewGuid())"></script>

}
