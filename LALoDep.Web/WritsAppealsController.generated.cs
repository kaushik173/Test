// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace LALoDep.Controllers.Case
{
    public partial class WritsAppealsController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected WritsAppealsController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetAppeals()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetAppeals);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ApplealDelete()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ApplealDelete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddEditAppeals()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddEditAppeals);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult AddEditAppealsSave()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.AddEditAppealsSave);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AppealDecisionAddEdit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AppealDecisionAddEdit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult AppealsDecisionAddEditSave()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.AppealsDecisionAddEditSave);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult DecisionDelete()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.DecisionDelete);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public WritsAppealsController Actions { get { return MVC.WritsAppeals; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "WritsAppeals";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "WritsAppeals";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string List = "List";
            public readonly string GetPetitions = "GetPetitions";
            public readonly string GetAppeals = "GetAppeals";
            public readonly string ApplealDelete = "ApplealDelete";
            public readonly string AddEditAppeals = "AddEditAppeals";
            public readonly string AddEditAppealsSave = "AddEditAppealsSave";
            public readonly string AppealDecisionAddEdit = "AppealDecisionAddEdit";
            public readonly string AppealsDecisionAddEditSave = "AppealsDecisionAddEditSave";
            public readonly string DecisionDelete = "DecisionDelete";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string List = "List";
            public const string GetPetitions = "GetPetitions";
            public const string GetAppeals = "GetAppeals";
            public const string ApplealDelete = "ApplealDelete";
            public const string AddEditAppeals = "AddEditAppeals";
            public const string AddEditAppealsSave = "AddEditAppealsSave";
            public const string AppealDecisionAddEdit = "AppealDecisionAddEdit";
            public const string AppealsDecisionAddEditSave = "AppealsDecisionAddEditSave";
            public const string DecisionDelete = "DecisionDelete";
        }


        static readonly ActionParamsClass_GetAppeals s_params_GetAppeals = new ActionParamsClass_GetAppeals();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAppeals GetAppealsParams { get { return s_params_GetAppeals; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAppeals
        {
            public readonly string petitionID = "petitionID";
        }
        static readonly ActionParamsClass_ApplealDelete s_params_ApplealDelete = new ActionParamsClass_ApplealDelete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ApplealDelete ApplealDeleteParams { get { return s_params_ApplealDelete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ApplealDelete
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_AddEditAppeals s_params_AddEditAppeals = new ActionParamsClass_AddEditAppeals();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddEditAppeals AddEditAppealsParams { get { return s_params_AddEditAppeals; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddEditAppeals
        {
            public readonly string id = "id";
            public readonly string appealID = "appealID";
            public readonly string docketNo = "docketNo";
            public readonly string pageTitle = "pageTitle";
        }
        static readonly ActionParamsClass_AddEditAppealsSave s_params_AddEditAppealsSave = new ActionParamsClass_AddEditAppealsSave();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddEditAppealsSave AddEditAppealsSaveParams { get { return s_params_AddEditAppealsSave; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddEditAppealsSave
        {
            public readonly string viewModel = "viewModel";
        }
        static readonly ActionParamsClass_AppealDecisionAddEdit s_params_AppealDecisionAddEdit = new ActionParamsClass_AppealDecisionAddEdit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AppealDecisionAddEdit AppealDecisionAddEditParams { get { return s_params_AppealDecisionAddEdit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AppealDecisionAddEdit
        {
            public readonly string id = "id";
            public readonly string appealID = "appealID";
        }
        static readonly ActionParamsClass_AppealsDecisionAddEditSave s_params_AppealsDecisionAddEditSave = new ActionParamsClass_AppealsDecisionAddEditSave();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AppealsDecisionAddEditSave AppealsDecisionAddEditSaveParams { get { return s_params_AppealsDecisionAddEditSave; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AppealsDecisionAddEditSave
        {
            public readonly string viewModel = "viewModel";
        }
        static readonly ActionParamsClass_DecisionDelete s_params_DecisionDelete = new ActionParamsClass_DecisionDelete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DecisionDelete DecisionDeleteParams { get { return s_params_DecisionDelete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DecisionDelete
        {
            public readonly string id = "id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string AddEditAppeals = "AddEditAppeals";
                public readonly string AppealDecisionAddEdit = "AppealDecisionAddEdit";
                public readonly string List = "List";
            }
            public readonly string AddEditAppeals = "~/Views/WritsAppeals/AddEditAppeals.cshtml";
            public readonly string AppealDecisionAddEdit = "~/Views/WritsAppeals/AppealDecisionAddEdit.cshtml";
            public readonly string List = "~/Views/WritsAppeals/List.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_WritsAppealsController : LALoDep.Controllers.Case.WritsAppealsController
    {
        public T4MVC_WritsAppealsController() : base(Dummy.Instance) { }

        [NonAction]
        partial void ListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult List()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.List);
            ListOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetPetitionsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetPetitions()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetPetitions);
            GetPetitionsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetAppealsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string petitionID);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetAppeals(string petitionID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetAppeals);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "petitionID", petitionID);
            GetAppealsOverride(callInfo, petitionID);
            return callInfo;
        }

        [NonAction]
        partial void ApplealDeleteOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.JsonResult ApplealDelete(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ApplealDelete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ApplealDeleteOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void AddEditAppealsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string appealID, string docketNo, string pageTitle);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddEditAppeals(string id, string appealID, string docketNo, string pageTitle)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddEditAppeals);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "appealID", appealID);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "docketNo", docketNo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pageTitle", pageTitle);
            AddEditAppealsOverride(callInfo, id, appealID, docketNo, pageTitle);
            return callInfo;
        }

        [NonAction]
        partial void AddEditAppealsSaveOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, LALoDep.Models.Case.AddAppealViewModel viewModel);

        [NonAction]
        public override System.Web.Mvc.JsonResult AddEditAppealsSave(LALoDep.Models.Case.AddAppealViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.AddEditAppealsSave);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            AddEditAppealsSaveOverride(callInfo, viewModel);
            return callInfo;
        }

        [NonAction]
        partial void AppealDecisionAddEditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string appealID);

        [NonAction]
        public override System.Web.Mvc.ActionResult AppealDecisionAddEdit(string id, string appealID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AppealDecisionAddEdit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "appealID", appealID);
            AppealDecisionAddEditOverride(callInfo, id, appealID);
            return callInfo;
        }

        [NonAction]
        partial void AppealsDecisionAddEditSaveOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, LALoDep.Models.Case.AppealDecisionAddEditViewModel viewModel);

        [NonAction]
        public override System.Web.Mvc.JsonResult AppealsDecisionAddEditSave(LALoDep.Models.Case.AppealDecisionAddEditViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.AppealsDecisionAddEditSave);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            AppealsDecisionAddEditSaveOverride(callInfo, viewModel);
            return callInfo;
        }

        [NonAction]
        partial void DecisionDeleteOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.JsonResult DecisionDelete(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.DecisionDelete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DecisionDeleteOverride(callInfo, id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
